openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/current/:
    get:
      operationId: currentUser
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: 'This endpoint represents users of the system


        There is a `users/current/` endpoint to retrieve the current user'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user_profiles/:
    get:
      operationId: listUserProfiles
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    post:
      operationId: createUserProfile
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
  /api/user_profiles/current/:
    get:
      operationId: currentUserProfile
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
  /api/user_profiles/{id}/:
    get:
      operationId: retrieveUserProfile
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserProfile
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserProfile
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUserProfile
      description: 'This endpoint represents user profiles


        There is a `user_profiles/current/` endpoint to retrieve the current user''s
        profile'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/roles/:
    get:
      operationId: listRoles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
      tags:
      - api
    post:
      operationId: createRole
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
      tags:
      - api
  /api/roles/{id}/:
    get:
      operationId: retrieveRole
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
      tags:
      - api
    put:
      operationId: updateRole
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRole
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRole
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/testers/:
    get:
      operationId: listTesters
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters:
      - name: userid
        required: false
        in: query
        description: userid
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: role_id
        required: false
        in: query
        description: role_id
        schema:
          type: string
      - name: role_name
        required: false
        in: query
        description: role_name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tester'
          description: ''
      tags:
      - api
    post:
      operationId: createTester
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tester'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tester'
          description: ''
      tags:
      - api
  /api/testers/current/:
    get:
      operationId: currentTester
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tester'
          description: ''
      tags:
      - api
  /api/testers/{id}/:
    get:
      operationId: retrieveTester
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tester.
        schema:
          type: string
      - name: userid
        required: false
        in: query
        description: userid
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: role_id
        required: false
        in: query
        description: role_id
        schema:
          type: string
      - name: role_name
        required: false
        in: query
        description: role_name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tester'
          description: ''
      tags:
      - api
    put:
      operationId: updateTester
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tester.
        schema:
          type: string
      - name: userid
        required: false
        in: query
        description: userid
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: role_id
        required: false
        in: query
        description: role_id
        schema:
          type: string
      - name: role_name
        required: false
        in: query
        description: role_name
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tester'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tester'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTester
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tester.
        schema:
          type: string
      - name: userid
        required: false
        in: query
        description: userid
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: role_id
        required: false
        in: query
        description: role_id
        schema:
          type: string
      - name: role_name
        required: false
        in: query
        description: role_name
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tester'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tester'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTester
      description: 'This endpoint represents testers.


        Testers can be query string filtered based on `userid`, `username`, `role_id`,
        and `role_name`.


        There is a `testers/current/` endpoint to retrieve the tester that matches
        the current user/role (from profile).

        If the system is unable to determine the current tester (e.g. because the
        current user has no profile set or because

        there is no tester matching the current user/role combination, a 404 error
        is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tester.
        schema:
          type: string
      - name: userid
        required: false
        in: query
        description: userid
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: role_id
        required: false
        in: query
        description: role_id
        schema:
          type: string
      - name: role_name
        required: false
        in: query
        description: role_name
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/entity_states/:
    get:
      operationId: listEntityStates
      description: This endpoint represents entity states.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityState'
          description: ''
      tags:
      - api
    post:
      operationId: createEntityState
      description: This endpoint represents entity states.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityState'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityState'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityState'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityState'
          description: ''
      tags:
      - api
  /api/entity_states/{name}/:
    get:
      operationId: retrieveEntityState
      description: This endpoint represents entity states.
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity state.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityState'
          description: ''
      tags:
      - api
    put:
      operationId: updateEntityState
      description: This endpoint represents entity states.
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity state.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityState'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityState'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityState'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEntityState
      description: This endpoint represents entity states.
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity state.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityState'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityState'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityState'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEntityState
      description: This endpoint represents entity states.
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity state.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/entity_types/:
    get:
      operationId: listEntityTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityType'
          description: ''
      tags:
      - api
    post:
      operationId: createEntityType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityType'
          description: ''
      tags:
      - api
  /api/entity_types/{name}/:
    get:
      operationId: retrieveEntityType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityType'
          description: ''
      tags:
      - api
    put:
      operationId: updateEntityType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEntityType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEntityType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/entity_event_roles/:
    get:
      operationId: listEntityEventRoles
      description: "This endpoint represents Entity roles within Events. The metadata_key\
        \ is used to match entities submitted in\nEvent metadata to the associated\
        \ roles. Roles may optionally define an Entity State that should apply to\
        \ the \nentity being related. The associations may also be restricted by Event\
        \ Type, Entity Type, and Entity Group \nusing the `valid_event_types`, `valid_entity_types`,\
        \ and `valid_entity_groups` fields respectively; when \nthese fields are set,\
        \ the association will only be created if the event/entity type and entity\
        \ group is in \nthe defined set. For example, assume the following EntityEventRole\
        \ and Entity exist:\n\n**EntityEventRole**\n\n    {\n        \"name\": \"\
        Entity Event Role 1\",\n        \"metadata_key\": \"metadata_key_1\",\n  \
        \      \"description\": \"Entity Event Role 1 description.\",\n        \"\
        entity_state\": \"/api/entity_states/1\",\n        \"valid_event_types\":\
        \ [\"/api/event_types/1\"],\n        \"valid_entity_types\": [\"/api/entity_types/2\"\
        ],\n        \"valid_entity_groups\": [\"/api/entity_groups/1\"]\n    }\n\n\
        **Entity**\n\n    {\n        \"name\": \"entity_1\"\n        ...\n    }\n\n\
        If an event were created or updated with the following metadata:\n\n**metadata**\n\
        \n    {\n        \"metadata_key_1\": \"entity_1\"\n    }\n\nthe event would\
        \ include a relation to entity_1 with \"Entity Event Role 1\" (assuming \n\
        event type, entity type, and entity group requirements were met). These objects\
        \ \nwould be serialized within the Event detail view.\n\nEntities can also\
        \ be submitted as a list. E.g.,\n\n**metadata**\n\n    {\n        \"metadata_key_1\"\
        : [\"entity_1\", \"entity_2\"]\n    }"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityEventRole'
          description: ''
      tags:
      - api
    post:
      operationId: createEntityEventRole
      description: "This endpoint represents Entity roles within Events. The metadata_key\
        \ is used to match entities submitted in\nEvent metadata to the associated\
        \ roles. Roles may optionally define an Entity State that should apply to\
        \ the \nentity being related. The associations may also be restricted by Event\
        \ Type, Entity Type, and Entity Group \nusing the `valid_event_types`, `valid_entity_types`,\
        \ and `valid_entity_groups` fields respectively; when \nthese fields are set,\
        \ the association will only be created if the event/entity type and entity\
        \ group is in \nthe defined set. For example, assume the following EntityEventRole\
        \ and Entity exist:\n\n**EntityEventRole**\n\n    {\n        \"name\": \"\
        Entity Event Role 1\",\n        \"metadata_key\": \"metadata_key_1\",\n  \
        \      \"description\": \"Entity Event Role 1 description.\",\n        \"\
        entity_state\": \"/api/entity_states/1\",\n        \"valid_event_types\":\
        \ [\"/api/event_types/1\"],\n        \"valid_entity_types\": [\"/api/entity_types/2\"\
        ],\n        \"valid_entity_groups\": [\"/api/entity_groups/1\"]\n    }\n\n\
        **Entity**\n\n    {\n        \"name\": \"entity_1\"\n        ...\n    }\n\n\
        If an event were created or updated with the following metadata:\n\n**metadata**\n\
        \n    {\n        \"metadata_key_1\": \"entity_1\"\n    }\n\nthe event would\
        \ include a relation to entity_1 with \"Entity Event Role 1\" (assuming \n\
        event type, entity type, and entity group requirements were met). These objects\
        \ \nwould be serialized within the Event detail view.\n\nEntities can also\
        \ be submitted as a list. E.g.,\n\n**metadata**\n\n    {\n        \"metadata_key_1\"\
        : [\"entity_1\", \"entity_2\"]\n    }"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityEventRole'
          description: ''
      tags:
      - api
  /api/entity_event_roles/{id}/:
    get:
      operationId: retrieveEntityEventRole
      description: "This endpoint represents Entity roles within Events. The metadata_key\
        \ is used to match entities submitted in\nEvent metadata to the associated\
        \ roles. Roles may optionally define an Entity State that should apply to\
        \ the \nentity being related. The associations may also be restricted by Event\
        \ Type, Entity Type, and Entity Group \nusing the `valid_event_types`, `valid_entity_types`,\
        \ and `valid_entity_groups` fields respectively; when \nthese fields are set,\
        \ the association will only be created if the event/entity type and entity\
        \ group is in \nthe defined set. For example, assume the following EntityEventRole\
        \ and Entity exist:\n\n**EntityEventRole**\n\n    {\n        \"name\": \"\
        Entity Event Role 1\",\n        \"metadata_key\": \"metadata_key_1\",\n  \
        \      \"description\": \"Entity Event Role 1 description.\",\n        \"\
        entity_state\": \"/api/entity_states/1\",\n        \"valid_event_types\":\
        \ [\"/api/event_types/1\"],\n        \"valid_entity_types\": [\"/api/entity_types/2\"\
        ],\n        \"valid_entity_groups\": [\"/api/entity_groups/1\"]\n    }\n\n\
        **Entity**\n\n    {\n        \"name\": \"entity_1\"\n        ...\n    }\n\n\
        If an event were created or updated with the following metadata:\n\n**metadata**\n\
        \n    {\n        \"metadata_key_1\": \"entity_1\"\n    }\n\nthe event would\
        \ include a relation to entity_1 with \"Entity Event Role 1\" (assuming \n\
        event type, entity type, and entity group requirements were met). These objects\
        \ \nwould be serialized within the Event detail view.\n\nEntities can also\
        \ be submitted as a list. E.g.,\n\n**metadata**\n\n    {\n        \"metadata_key_1\"\
        : [\"entity_1\", \"entity_2\"]\n    }"
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity event role.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityEventRole'
          description: ''
      tags:
      - api
    put:
      operationId: updateEntityEventRole
      description: "This endpoint represents Entity roles within Events. The metadata_key\
        \ is used to match entities submitted in\nEvent metadata to the associated\
        \ roles. Roles may optionally define an Entity State that should apply to\
        \ the \nentity being related. The associations may also be restricted by Event\
        \ Type, Entity Type, and Entity Group \nusing the `valid_event_types`, `valid_entity_types`,\
        \ and `valid_entity_groups` fields respectively; when \nthese fields are set,\
        \ the association will only be created if the event/entity type and entity\
        \ group is in \nthe defined set. For example, assume the following EntityEventRole\
        \ and Entity exist:\n\n**EntityEventRole**\n\n    {\n        \"name\": \"\
        Entity Event Role 1\",\n        \"metadata_key\": \"metadata_key_1\",\n  \
        \      \"description\": \"Entity Event Role 1 description.\",\n        \"\
        entity_state\": \"/api/entity_states/1\",\n        \"valid_event_types\":\
        \ [\"/api/event_types/1\"],\n        \"valid_entity_types\": [\"/api/entity_types/2\"\
        ],\n        \"valid_entity_groups\": [\"/api/entity_groups/1\"]\n    }\n\n\
        **Entity**\n\n    {\n        \"name\": \"entity_1\"\n        ...\n    }\n\n\
        If an event were created or updated with the following metadata:\n\n**metadata**\n\
        \n    {\n        \"metadata_key_1\": \"entity_1\"\n    }\n\nthe event would\
        \ include a relation to entity_1 with \"Entity Event Role 1\" (assuming \n\
        event type, entity type, and entity group requirements were met). These objects\
        \ \nwould be serialized within the Event detail view.\n\nEntities can also\
        \ be submitted as a list. E.g.,\n\n**metadata**\n\n    {\n        \"metadata_key_1\"\
        : [\"entity_1\", \"entity_2\"]\n    }"
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity event role.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityEventRole'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEntityEventRole
      description: "This endpoint represents Entity roles within Events. The metadata_key\
        \ is used to match entities submitted in\nEvent metadata to the associated\
        \ roles. Roles may optionally define an Entity State that should apply to\
        \ the \nentity being related. The associations may also be restricted by Event\
        \ Type, Entity Type, and Entity Group \nusing the `valid_event_types`, `valid_entity_types`,\
        \ and `valid_entity_groups` fields respectively; when \nthese fields are set,\
        \ the association will only be created if the event/entity type and entity\
        \ group is in \nthe defined set. For example, assume the following EntityEventRole\
        \ and Entity exist:\n\n**EntityEventRole**\n\n    {\n        \"name\": \"\
        Entity Event Role 1\",\n        \"metadata_key\": \"metadata_key_1\",\n  \
        \      \"description\": \"Entity Event Role 1 description.\",\n        \"\
        entity_state\": \"/api/entity_states/1\",\n        \"valid_event_types\":\
        \ [\"/api/event_types/1\"],\n        \"valid_entity_types\": [\"/api/entity_types/2\"\
        ],\n        \"valid_entity_groups\": [\"/api/entity_groups/1\"]\n    }\n\n\
        **Entity**\n\n    {\n        \"name\": \"entity_1\"\n        ...\n    }\n\n\
        If an event were created or updated with the following metadata:\n\n**metadata**\n\
        \n    {\n        \"metadata_key_1\": \"entity_1\"\n    }\n\nthe event would\
        \ include a relation to entity_1 with \"Entity Event Role 1\" (assuming \n\
        event type, entity type, and entity group requirements were met). These objects\
        \ \nwould be serialized within the Event detail view.\n\nEntities can also\
        \ be submitted as a list. E.g.,\n\n**metadata**\n\n    {\n        \"metadata_key_1\"\
        : [\"entity_1\", \"entity_2\"]\n    }"
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity event role.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityEventRole'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityEventRole'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEntityEventRole
      description: "This endpoint represents Entity roles within Events. The metadata_key\
        \ is used to match entities submitted in\nEvent metadata to the associated\
        \ roles. Roles may optionally define an Entity State that should apply to\
        \ the \nentity being related. The associations may also be restricted by Event\
        \ Type, Entity Type, and Entity Group \nusing the `valid_event_types`, `valid_entity_types`,\
        \ and `valid_entity_groups` fields respectively; when \nthese fields are set,\
        \ the association will only be created if the event/entity type and entity\
        \ group is in \nthe defined set. For example, assume the following EntityEventRole\
        \ and Entity exist:\n\n**EntityEventRole**\n\n    {\n        \"name\": \"\
        Entity Event Role 1\",\n        \"metadata_key\": \"metadata_key_1\",\n  \
        \      \"description\": \"Entity Event Role 1 description.\",\n        \"\
        entity_state\": \"/api/entity_states/1\",\n        \"valid_event_types\":\
        \ [\"/api/event_types/1\"],\n        \"valid_entity_types\": [\"/api/entity_types/2\"\
        ],\n        \"valid_entity_groups\": [\"/api/entity_groups/1\"]\n    }\n\n\
        **Entity**\n\n    {\n        \"name\": \"entity_1\"\n        ...\n    }\n\n\
        If an event were created or updated with the following metadata:\n\n**metadata**\n\
        \n    {\n        \"metadata_key_1\": \"entity_1\"\n    }\n\nthe event would\
        \ include a relation to entity_1 with \"Entity Event Role 1\" (assuming \n\
        event type, entity type, and entity group requirements were met). These objects\
        \ \nwould be serialized within the Event detail view.\n\nEntities can also\
        \ be submitted as a list. E.g.,\n\n**metadata**\n\n    {\n        \"metadata_key_1\"\
        : [\"entity_1\", \"entity_2\"]\n    }"
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity event role.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/entities/:
    get:
      operationId: listEntitys
      description: "This endpoint represents entities.\n\nEntities can be query string\
        \ filtered by containing *entity_group*.\nThe `group__in` query string returns\
        \ all entities within a particular *entity_group*. The input value is the\
        \ group's *id*.\nQuerying multiple groups will return all entities within\
        \ each group.\n\n*  e.g. `entities/?group__in=1`\n*  e.g. `entities/?group__in=1,4,5`\n\
        \nThe group *name* can be used as well. The list format won't work while using\
        \ the name. Each group *name* has to be specified.\nQuerying multiple groups\
        \ will return all entities within each group .\n\n*  e.g. `entities/?group=vehicle_group`\n\
        *  e.g. `entities/?group=vehicle_group&group=red_team`\n\nIt is also possible\
        \ to filter by entity type.\nQuerying multiple types will return all entities\
        \ that match any of the types.\n\n*  e.g. `entities/?entity_type=uav`\n* \
        \ e.g. `entities/?entity_type=uav&entity_type=wheeled_robot`\n\nRegion can\
        \ be filtered as well using the `region` querystring.\n\n*  e.g `entities/?region=SectorA`\n\
        *  e.g `entities/?region=SectorB&entity_type=ugv`\n\nThis viewset also provides\
        \ the ability to view other entities that are near another entity or a specified\
        \ location.\n  e.g. entities/{target_entity}/around\n  e.g. entities/{target_entity}/around?distance=5.6\n\
        \  e.g. entities/radius?latitude=30&longitude=-117\n  e.g. entities/radius?latitude=33.4&longitude=32.3&distance=32"
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: display_name
        required: false
        in: query
        description: display_name
        schema:
          type: string
      - name: physical_id
        required: false
        in: query
        description: physical_id
        schema:
          type: string
      - name: entity_type
        required: false
        in: query
        description: entity_type
        schema:
          type: string
      - name: groups
        required: false
        in: query
        description: groups
        schema:
          type: string
      - name: mods
        required: false
        in: query
        description: mods
        schema:
          type: string
      - name: region
        required: false
        in: query
        description: region
        schema:
          type: string
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: group__in
        required: false
        in: query
        description: group__in
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Entity ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - modified_datetime
          - -modified_datetime
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
    post:
      operationId: createEntity
      description: "This endpoint represents entities.\n\nEntities can be query string\
        \ filtered by containing *entity_group*.\nThe `group__in` query string returns\
        \ all entities within a particular *entity_group*. The input value is the\
        \ group's *id*.\nQuerying multiple groups will return all entities within\
        \ each group.\n\n*  e.g. `entities/?group__in=1`\n*  e.g. `entities/?group__in=1,4,5`\n\
        \nThe group *name* can be used as well. The list format won't work while using\
        \ the name. Each group *name* has to be specified.\nQuerying multiple groups\
        \ will return all entities within each group .\n\n*  e.g. `entities/?group=vehicle_group`\n\
        *  e.g. `entities/?group=vehicle_group&group=red_team`\n\nIt is also possible\
        \ to filter by entity type.\nQuerying multiple types will return all entities\
        \ that match any of the types.\n\n*  e.g. `entities/?entity_type=uav`\n* \
        \ e.g. `entities/?entity_type=uav&entity_type=wheeled_robot`\n\nRegion can\
        \ be filtered as well using the `region` querystring.\n\n*  e.g `entities/?region=SectorA`\n\
        *  e.g `entities/?region=SectorB&entity_type=ugv`\n\nThis viewset also provides\
        \ the ability to view other entities that are near another entity or a specified\
        \ location.\n  e.g. entities/{target_entity}/around\n  e.g. entities/{target_entity}/around?distance=5.6\n\
        \  e.g. entities/radius?latitude=30&longitude=-117\n  e.g. entities/radius?latitude=33.4&longitude=32.3&distance=32"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entity'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
  /api/entities/radius/:
    get:
      operationId: radiusEntity
      description: "This endpoint provides info about entities that are          \
        \   within <distance> meters away from the target location.\nThe return value\
        \ is a list of tuples where the tuple             contains the name of an\
        \ entity and how far away it             is from the target location in meters.\n\
        The return value is sorted in ascending order of distance             from\
        \ the target location (i.e. closest entities first).\n\nThe default value\
        \ for the distance querystring is 5.0 if not specified.\n\n    entities/radius?latitude=33.4&longitude=32.3&distance=32\n\
        \nThe 'entity_type' querystring can be used to filter the list of entities\
        \ by entity type.\n\n    entities/radius?latitude=105.7&longitude=44&distance=8&entity_type=uav\n\
        \nThe 'group' querystring can be used to filter the list of entities by group\
        \ name.\nThe 'group__in' querystring can do a similar filter but by comma-separated\
        \ group ids instead.\n\n    entities/radius?latitude=33.4&longitude=32.3&distance=32&group=test_group\n\
        \    entities/radius?latitude=33.4&longitude=32.3&distance=32&group__in=1,2,3,4"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
  /api/entities/{name}/:
    get:
      operationId: retrieveEntity
      description: "This endpoint represents entities.\n\nEntities can be query string\
        \ filtered by containing *entity_group*.\nThe `group__in` query string returns\
        \ all entities within a particular *entity_group*. The input value is the\
        \ group's *id*.\nQuerying multiple groups will return all entities within\
        \ each group.\n\n*  e.g. `entities/?group__in=1`\n*  e.g. `entities/?group__in=1,4,5`\n\
        \nThe group *name* can be used as well. The list format won't work while using\
        \ the name. Each group *name* has to be specified.\nQuerying multiple groups\
        \ will return all entities within each group .\n\n*  e.g. `entities/?group=vehicle_group`\n\
        *  e.g. `entities/?group=vehicle_group&group=red_team`\n\nIt is also possible\
        \ to filter by entity type.\nQuerying multiple types will return all entities\
        \ that match any of the types.\n\n*  e.g. `entities/?entity_type=uav`\n* \
        \ e.g. `entities/?entity_type=uav&entity_type=wheeled_robot`\n\nRegion can\
        \ be filtered as well using the `region` querystring.\n\n*  e.g `entities/?region=SectorA`\n\
        *  e.g `entities/?region=SectorB&entity_type=ugv`\n\nThis viewset also provides\
        \ the ability to view other entities that are near another entity or a specified\
        \ location.\n  e.g. entities/{target_entity}/around\n  e.g. entities/{target_entity}/around?distance=5.6\n\
        \  e.g. entities/radius?latitude=30&longitude=-117\n  e.g. entities/radius?latitude=33.4&longitude=32.3&distance=32"
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: display_name
        required: false
        in: query
        description: display_name
        schema:
          type: string
      - name: physical_id
        required: false
        in: query
        description: physical_id
        schema:
          type: string
      - name: entity_type
        required: false
        in: query
        description: entity_type
        schema:
          type: string
      - name: groups
        required: false
        in: query
        description: groups
        schema:
          type: string
      - name: mods
        required: false
        in: query
        description: mods
        schema:
          type: string
      - name: region
        required: false
        in: query
        description: region
        schema:
          type: string
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: group__in
        required: false
        in: query
        description: group__in
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Entity ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - modified_datetime
          - -modified_datetime
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
    put:
      operationId: updateEntity
      description: "This endpoint represents entities.\n\nEntities can be query string\
        \ filtered by containing *entity_group*.\nThe `group__in` query string returns\
        \ all entities within a particular *entity_group*. The input value is the\
        \ group's *id*.\nQuerying multiple groups will return all entities within\
        \ each group.\n\n*  e.g. `entities/?group__in=1`\n*  e.g. `entities/?group__in=1,4,5`\n\
        \nThe group *name* can be used as well. The list format won't work while using\
        \ the name. Each group *name* has to be specified.\nQuerying multiple groups\
        \ will return all entities within each group .\n\n*  e.g. `entities/?group=vehicle_group`\n\
        *  e.g. `entities/?group=vehicle_group&group=red_team`\n\nIt is also possible\
        \ to filter by entity type.\nQuerying multiple types will return all entities\
        \ that match any of the types.\n\n*  e.g. `entities/?entity_type=uav`\n* \
        \ e.g. `entities/?entity_type=uav&entity_type=wheeled_robot`\n\nRegion can\
        \ be filtered as well using the `region` querystring.\n\n*  e.g `entities/?region=SectorA`\n\
        *  e.g `entities/?region=SectorB&entity_type=ugv`\n\nThis viewset also provides\
        \ the ability to view other entities that are near another entity or a specified\
        \ location.\n  e.g. entities/{target_entity}/around\n  e.g. entities/{target_entity}/around?distance=5.6\n\
        \  e.g. entities/radius?latitude=30&longitude=-117\n  e.g. entities/radius?latitude=33.4&longitude=32.3&distance=32"
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: display_name
        required: false
        in: query
        description: display_name
        schema:
          type: string
      - name: physical_id
        required: false
        in: query
        description: physical_id
        schema:
          type: string
      - name: entity_type
        required: false
        in: query
        description: entity_type
        schema:
          type: string
      - name: groups
        required: false
        in: query
        description: groups
        schema:
          type: string
      - name: mods
        required: false
        in: query
        description: mods
        schema:
          type: string
      - name: region
        required: false
        in: query
        description: region
        schema:
          type: string
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: group__in
        required: false
        in: query
        description: group__in
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Entity ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - modified_datetime
          - -modified_datetime
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entity'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEntity
      description: "This endpoint represents entities.\n\nEntities can be query string\
        \ filtered by containing *entity_group*.\nThe `group__in` query string returns\
        \ all entities within a particular *entity_group*. The input value is the\
        \ group's *id*.\nQuerying multiple groups will return all entities within\
        \ each group.\n\n*  e.g. `entities/?group__in=1`\n*  e.g. `entities/?group__in=1,4,5`\n\
        \nThe group *name* can be used as well. The list format won't work while using\
        \ the name. Each group *name* has to be specified.\nQuerying multiple groups\
        \ will return all entities within each group .\n\n*  e.g. `entities/?group=vehicle_group`\n\
        *  e.g. `entities/?group=vehicle_group&group=red_team`\n\nIt is also possible\
        \ to filter by entity type.\nQuerying multiple types will return all entities\
        \ that match any of the types.\n\n*  e.g. `entities/?entity_type=uav`\n* \
        \ e.g. `entities/?entity_type=uav&entity_type=wheeled_robot`\n\nRegion can\
        \ be filtered as well using the `region` querystring.\n\n*  e.g `entities/?region=SectorA`\n\
        *  e.g `entities/?region=SectorB&entity_type=ugv`\n\nThis viewset also provides\
        \ the ability to view other entities that are near another entity or a specified\
        \ location.\n  e.g. entities/{target_entity}/around\n  e.g. entities/{target_entity}/around?distance=5.6\n\
        \  e.g. entities/radius?latitude=30&longitude=-117\n  e.g. entities/radius?latitude=33.4&longitude=32.3&distance=32"
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: display_name
        required: false
        in: query
        description: display_name
        schema:
          type: string
      - name: physical_id
        required: false
        in: query
        description: physical_id
        schema:
          type: string
      - name: entity_type
        required: false
        in: query
        description: entity_type
        schema:
          type: string
      - name: groups
        required: false
        in: query
        description: groups
        schema:
          type: string
      - name: mods
        required: false
        in: query
        description: mods
        schema:
          type: string
      - name: region
        required: false
        in: query
        description: region
        schema:
          type: string
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: group__in
        required: false
        in: query
        description: group__in
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Entity ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - modified_datetime
          - -modified_datetime
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entity'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEntity
      description: "This endpoint represents entities.\n\nEntities can be query string\
        \ filtered by containing *entity_group*.\nThe `group__in` query string returns\
        \ all entities within a particular *entity_group*. The input value is the\
        \ group's *id*.\nQuerying multiple groups will return all entities within\
        \ each group.\n\n*  e.g. `entities/?group__in=1`\n*  e.g. `entities/?group__in=1,4,5`\n\
        \nThe group *name* can be used as well. The list format won't work while using\
        \ the name. Each group *name* has to be specified.\nQuerying multiple groups\
        \ will return all entities within each group .\n\n*  e.g. `entities/?group=vehicle_group`\n\
        *  e.g. `entities/?group=vehicle_group&group=red_team`\n\nIt is also possible\
        \ to filter by entity type.\nQuerying multiple types will return all entities\
        \ that match any of the types.\n\n*  e.g. `entities/?entity_type=uav`\n* \
        \ e.g. `entities/?entity_type=uav&entity_type=wheeled_robot`\n\nRegion can\
        \ be filtered as well using the `region` querystring.\n\n*  e.g `entities/?region=SectorA`\n\
        *  e.g `entities/?region=SectorB&entity_type=ugv`\n\nThis viewset also provides\
        \ the ability to view other entities that are near another entity or a specified\
        \ location.\n  e.g. entities/{target_entity}/around\n  e.g. entities/{target_entity}/around?distance=5.6\n\
        \  e.g. entities/radius?latitude=30&longitude=-117\n  e.g. entities/radius?latitude=33.4&longitude=32.3&distance=32"
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: display_name
        required: false
        in: query
        description: display_name
        schema:
          type: string
      - name: physical_id
        required: false
        in: query
        description: physical_id
        schema:
          type: string
      - name: entity_type
        required: false
        in: query
        description: entity_type
        schema:
          type: string
      - name: groups
        required: false
        in: query
        description: groups
        schema:
          type: string
      - name: mods
        required: false
        in: query
        description: mods
        schema:
          type: string
      - name: region
        required: false
        in: query
        description: region
        schema:
          type: string
      - name: group
        required: false
        in: query
        description: group
        schema:
          type: string
      - name: group__in
        required: false
        in: query
        description: group__in
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Entity ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - modified_datetime
          - -modified_datetime
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/entities/{name}/around/:
    get:
      operationId: aroundEntity
      description: "This endpoint provides info about entities that are          \
        \   within <distance> meters away from the target entity.\nThe return value\
        \ is a list of tuples where the tuple             contains the name of an\
        \ entity and how far away it             is from the target entity in meters.\n\
        The return value is sorted in ascending order of distance             from\
        \ the target entity (i.e. closest entities first).\n\nThe default value for\
        \ the distance querystring is 5.0 if not specified.\n\n    entities/{target_entity}/around?distance=5.6\n\
        \    entities/{target_entity}/around?distance=3\n\nThe 'entity_type' querystring\
        \ can be used to filter the list of entities by entity type.\n\n    entities/{target_entity}/around?distance=5&entity_type=uav\n\
        \    entities/{target_entity}/around?distance=5&entity_type=field_node\n\n\
        The 'group' querystring can be used to filter the list of entities by group\
        \ name.\nThe 'group__in' querystring can do a similar filter but by comma-separated\
        \ group ids instead.\n\n    entities/{target_entity}/around?distance=32&group=test_group\n\
        \    entities/{target_entity}/around?distance=32&group=test_group&group=sector2\n\
        \    entities/{target_entity}/around?distance=32&group__in=1,2,3,4"
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this entity.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
      tags:
      - api
  /api/entity_groups/:
    get:
      operationId: listEntityGroups
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityGroup'
          description: ''
      tags:
      - api
    post:
      operationId: createEntityGroup
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityGroup'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityGroup'
          description: ''
      tags:
      - api
  /api/entity_groups/{id}/:
    get:
      operationId: retrieveEntityGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity group.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityGroup'
          description: ''
      tags:
      - api
    put:
      operationId: updateEntityGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity group.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityGroup'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityGroup'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEntityGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity group.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityGroup'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityGroup'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEntityGroup
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this entity group.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/point_styles/:
    get:
      operationId: listPointStyles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointStyle'
          description: ''
      tags:
      - api
    post:
      operationId: createPointStyle
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointStyle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PointStyle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PointStyle'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointStyle'
          description: ''
      tags:
      - api
  /api/point_styles/{name}/:
    get:
      operationId: retrievePointStyle
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this point style.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointStyle'
          description: ''
      tags:
      - api
    put:
      operationId: updatePointStyle
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this point style.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointStyle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PointStyle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PointStyle'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointStyle'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePointStyle
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this point style.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointStyle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PointStyle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PointStyle'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointStyle'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPointStyle
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this point style.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/locations/:
    get:
      operationId: listLocations
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    post:
      operationId: createLocation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
  /api/locations/{id}/:
    get:
      operationId: retrieveLocation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    put:
      operationId: updateLocation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateLocation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyLocation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/campaigns/:
    get:
      operationId: listCampaigns
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
    post:
      operationId: createCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
  /api/campaigns/latest/:
    get:
      operationId: latestCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
  /api/campaigns/{id}/:
    get:
      operationId: retrieveCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
    put:
      operationId: updateCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/campaigns/{id}/latest_trial/:
    get:
      operationId: latestTrialCampaign
      description: 'This endpoint represents test campaigns.


        The following query-type endpoints are defined:


        * `campaigns/latest/`: retrieve the most recent campaign.

        * `campaigns/{id}/latest_trial/`: retrieve the most recent trial for a given
        campaign'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
      tags:
      - api
  /api/trials/:
    get:
      operationId: listTrials
      description: 'This endpoint represents test trials.


        Trials can be query string filtered based on `campaign`, `location`, `test_method`,
        `entities`, `test_condition`, and `reported`


        Ordering can be set by query string.  Options include `ids` and `start_datetime`.


        * e.g. `trials/?ordering=-ids`


        There is a `trials/latest/` endpoint to retrieve the most recent trial.


        There is a `trials/current/` endpoint to retrieve the current trial (if any).


        The *end_datatime* may be automatically populated if there is a non-null time_limit
        field in the associated scenario.

        If the *time_limit* field is null, the *end_datetime* must be added manually.


        If *end_datetime* is manually submitted or already exists, the *time_limit*
        field has no effect.

        Otherwise, *end_datetime* will be automatically determined based on *start_datetime*
        and the *time_limit* field of the *scenario*.

        Trials may also have an associated game clock state. To get the clock state
        for a trial,

        query trials/{id}/clock_state.'
      parameters:
      - name: campaign
        required: false
        in: query
        description: campaign
        schema:
          type: string
      - name: scenario
        required: false
        in: query
        description: scenario
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: test_method
        required: false
        in: query
        description: test_method
        schema:
          type: string
      - name: entities
        required: false
        in: query
        description: entities
        schema:
          type: string
      - name: test_condition
        required: false
        in: query
        description: test_condition
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Trial ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - ids
          - -ids
          - ids
          - -ids
      - name: reported
        required: false
        in: query
        description: reported
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trial'
          description: ''
      tags:
      - api
    post:
      operationId: createTrial
      description: 'This endpoint represents test trials.


        Trials can be query string filtered based on `campaign`, `location`, `test_method`,
        `entities`, `test_condition`, and `reported`


        Ordering can be set by query string.  Options include `ids` and `start_datetime`.


        * e.g. `trials/?ordering=-ids`


        There is a `trials/latest/` endpoint to retrieve the most recent trial.


        There is a `trials/current/` endpoint to retrieve the current trial (if any).


        The *end_datatime* may be automatically populated if there is a non-null time_limit
        field in the associated scenario.

        If the *time_limit* field is null, the *end_datetime* must be added manually.


        If *end_datetime* is manually submitted or already exists, the *time_limit*
        field has no effect.

        Otherwise, *end_datetime* will be automatically determined based on *start_datetime*
        and the *time_limit* field of the *scenario*.

        Trials may also have an associated game clock state. To get the clock state
        for a trial,

        query trials/{id}/clock_state.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trial'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trial'
          description: ''
      tags:
      - api
  /api/trials/{id}/:
    get:
      operationId: retrieveTrial
      description: 'This endpoint represents test trials.


        Trials can be query string filtered based on `campaign`, `location`, `test_method`,
        `entities`, `test_condition`, and `reported`


        Ordering can be set by query string.  Options include `ids` and `start_datetime`.


        * e.g. `trials/?ordering=-ids`


        There is a `trials/latest/` endpoint to retrieve the most recent trial.


        There is a `trials/current/` endpoint to retrieve the current trial (if any).


        The *end_datatime* may be automatically populated if there is a non-null time_limit
        field in the associated scenario.

        If the *time_limit* field is null, the *end_datetime* must be added manually.


        If *end_datetime* is manually submitted or already exists, the *time_limit*
        field has no effect.

        Otherwise, *end_datetime* will be automatically determined based on *start_datetime*
        and the *time_limit* field of the *scenario*.

        Trials may also have an associated game clock state. To get the clock state
        for a trial,

        query trials/{id}/clock_state.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trial.
        schema:
          type: string
      - name: campaign
        required: false
        in: query
        description: campaign
        schema:
          type: string
      - name: scenario
        required: false
        in: query
        description: scenario
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: test_method
        required: false
        in: query
        description: test_method
        schema:
          type: string
      - name: entities
        required: false
        in: query
        description: entities
        schema:
          type: string
      - name: test_condition
        required: false
        in: query
        description: test_condition
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Trial ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - ids
          - -ids
          - ids
          - -ids
      - name: reported
        required: false
        in: query
        description: reported
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trial'
          description: ''
      tags:
      - api
    put:
      operationId: updateTrial
      description: 'This endpoint represents test trials.


        Trials can be query string filtered based on `campaign`, `location`, `test_method`,
        `entities`, `test_condition`, and `reported`


        Ordering can be set by query string.  Options include `ids` and `start_datetime`.


        * e.g. `trials/?ordering=-ids`


        There is a `trials/latest/` endpoint to retrieve the most recent trial.


        There is a `trials/current/` endpoint to retrieve the current trial (if any).


        The *end_datatime* may be automatically populated if there is a non-null time_limit
        field in the associated scenario.

        If the *time_limit* field is null, the *end_datetime* must be added manually.


        If *end_datetime* is manually submitted or already exists, the *time_limit*
        field has no effect.

        Otherwise, *end_datetime* will be automatically determined based on *start_datetime*
        and the *time_limit* field of the *scenario*.

        Trials may also have an associated game clock state. To get the clock state
        for a trial,

        query trials/{id}/clock_state.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trial.
        schema:
          type: string
      - name: campaign
        required: false
        in: query
        description: campaign
        schema:
          type: string
      - name: scenario
        required: false
        in: query
        description: scenario
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: test_method
        required: false
        in: query
        description: test_method
        schema:
          type: string
      - name: entities
        required: false
        in: query
        description: entities
        schema:
          type: string
      - name: test_condition
        required: false
        in: query
        description: test_condition
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Trial ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - ids
          - -ids
          - ids
          - -ids
      - name: reported
        required: false
        in: query
        description: reported
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trial'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trial'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTrial
      description: 'This endpoint represents test trials.


        Trials can be query string filtered based on `campaign`, `location`, `test_method`,
        `entities`, `test_condition`, and `reported`


        Ordering can be set by query string.  Options include `ids` and `start_datetime`.


        * e.g. `trials/?ordering=-ids`


        There is a `trials/latest/` endpoint to retrieve the most recent trial.


        There is a `trials/current/` endpoint to retrieve the current trial (if any).


        The *end_datatime* may be automatically populated if there is a non-null time_limit
        field in the associated scenario.

        If the *time_limit* field is null, the *end_datetime* must be added manually.


        If *end_datetime* is manually submitted or already exists, the *time_limit*
        field has no effect.

        Otherwise, *end_datetime* will be automatically determined based on *start_datetime*
        and the *time_limit* field of the *scenario*.

        Trials may also have an associated game clock state. To get the clock state
        for a trial,

        query trials/{id}/clock_state.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trial.
        schema:
          type: string
      - name: campaign
        required: false
        in: query
        description: campaign
        schema:
          type: string
      - name: scenario
        required: false
        in: query
        description: scenario
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: test_method
        required: false
        in: query
        description: test_method
        schema:
          type: string
      - name: entities
        required: false
        in: query
        description: entities
        schema:
          type: string
      - name: test_condition
        required: false
        in: query
        description: test_condition
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Trial ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - ids
          - -ids
          - ids
          - -ids
      - name: reported
        required: false
        in: query
        description: reported
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trial'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trial'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTrial
      description: 'This endpoint represents test trials.


        Trials can be query string filtered based on `campaign`, `location`, `test_method`,
        `entities`, `test_condition`, and `reported`


        Ordering can be set by query string.  Options include `ids` and `start_datetime`.


        * e.g. `trials/?ordering=-ids`


        There is a `trials/latest/` endpoint to retrieve the most recent trial.


        There is a `trials/current/` endpoint to retrieve the current trial (if any).


        The *end_datatime* may be automatically populated if there is a non-null time_limit
        field in the associated scenario.

        If the *time_limit* field is null, the *end_datetime* must be added manually.


        If *end_datetime* is manually submitted or already exists, the *time_limit*
        field has no effect.

        Otherwise, *end_datetime* will be automatically determined based on *start_datetime*
        and the *time_limit* field of the *scenario*.

        Trials may also have an associated game clock state. To get the clock state
        for a trial,

        query trials/{id}/clock_state.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trial.
        schema:
          type: string
      - name: campaign
        required: false
        in: query
        description: campaign
        schema:
          type: string
      - name: scenario
        required: false
        in: query
        description: scenario
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: test_method
        required: false
        in: query
        description: test_method
        schema:
          type: string
      - name: entities
        required: false
        in: query
        description: entities
        schema:
          type: string
      - name: test_condition
        required: false
        in: query
        description: test_condition
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Trial ordering
        schema:
          type: string
          enum:
          - start_datetime
          - -start_datetime
          - ids
          - -ids
          - ids
          - -ids
      - name: reported
        required: false
        in: query
        description: reported
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/weather/:
    get:
      operationId: listWeathers
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weather'
          description: ''
      tags:
      - api
    post:
      operationId: createWeather
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Weather'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Weather'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
          description: ''
      tags:
      - api
  /api/weather/current/:
    get:
      operationId: currentWeather
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
          description: ''
      tags:
      - api
  /api/weather/{id}/:
    get:
      operationId: retrieveWeather
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weather.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
          description: ''
      tags:
      - api
    put:
      operationId: updateWeather
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weather.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Weather'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Weather'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWeather
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weather.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Weather'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Weather'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWeather
      description: 'This endpoint represents weather.


        The following query-type endpoints are defined:


        * `weather/current/`: retrieve the current weather (if set)'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weather.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/test_condition/:
    get:
      operationId: listTestConditions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCondition'
          description: ''
      tags:
      - api
    post:
      operationId: createTestCondition
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCondition'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCondition'
          description: ''
      tags:
      - api
  /api/test_condition/{id}/:
    get:
      operationId: retrieveTestCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test condition.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCondition'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test condition.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCondition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCondition'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test condition.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCondition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCondition'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test condition.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/performers/:
    get:
      operationId: listPerformers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Performer'
          description: ''
      tags:
      - api
    post:
      operationId: createPerformer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Performer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Performer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
      tags:
      - api
  /api/performers/{id}/:
    get:
      operationId: retrievePerformer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this performer.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
      tags:
      - api
    put:
      operationId: updatePerformer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this performer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Performer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Performer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePerformer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this performer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Performer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Performer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPerformer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this performer.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/test_methods/:
    get:
      operationId: listTestMethods
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestMethod'
          description: ''
      tags:
      - api
    post:
      operationId: createTestMethod
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestMethod'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMethod'
          description: ''
      tags:
      - api
  /api/test_methods/{id}/:
    get:
      operationId: retrieveTestMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test method.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMethod'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test method.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestMethod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMethod'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test method.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestMethod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMethod'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test method.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/scenarios/:
    get:
      operationId: listScenarios
      description: Scenarios have a `time_limit` field that represents how long this
        scenario should take.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scenario'
          description: ''
      tags:
      - api
    post:
      operationId: createScenario
      description: Scenarios have a `time_limit` field that represents how long this
        scenario should take.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
      tags:
      - api
  /api/scenarios/{id}/:
    get:
      operationId: retrieveScenario
      description: Scenarios have a `time_limit` field that represents how long this
        scenario should take.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scenario.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
      tags:
      - api
    put:
      operationId: updateScenario
      description: Scenarios have a `time_limit` field that represents how long this
        scenario should take.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scenario.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateScenario
      description: Scenarios have a `time_limit` field that represents how long this
        scenario should take.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scenario.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyScenario
      description: Scenarios have a `time_limit` field that represents how long this
        scenario should take.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scenario.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/capabilities_under_test/:
    get:
      operationId: listCapabilityUnderTests
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CapabilityUnderTest'
          description: ''
      tags:
      - api
    post:
      operationId: createCapabilityUnderTest
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityUnderTest'
          description: ''
      tags:
      - api
  /api/capabilities_under_test/{id}/:
    get:
      operationId: retrieveCapabilityUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability under test.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityUnderTest'
          description: ''
      tags:
      - api
    put:
      operationId: updateCapabilityUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability under test.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityUnderTest'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCapabilityUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability under test.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CapabilityUnderTest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityUnderTest'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCapabilityUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability under test.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/system_configurations/:
    get:
      operationId: listSystemConfigurations
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemConfiguration'
          description: ''
      tags:
      - api
    post:
      operationId: createSystemConfiguration
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: ''
      tags:
      - api
  /api/system_configurations/{id}/:
    get:
      operationId: retrieveSystemConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this system configuration.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: ''
      tags:
      - api
    put:
      operationId: updateSystemConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this system configuration.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSystemConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this system configuration.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySystemConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this system configuration.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pose_sources/:
    get:
      operationId: listPoseSources
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PoseSource'
          description: ''
      tags:
      - api
    post:
      operationId: createPoseSource
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoseSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PoseSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PoseSource'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoseSource'
          description: ''
      tags:
      - api
  /api/pose_sources/{id}/:
    get:
      operationId: retrievePoseSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose source.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoseSource'
          description: ''
      tags:
      - api
    put:
      operationId: updatePoseSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose source.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoseSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PoseSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PoseSource'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoseSource'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePoseSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose source.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoseSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PoseSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PoseSource'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoseSource'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPoseSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose source.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/poses/:
    get:
      operationId: listPoses
      description: 'This endpoint represents entity poses


        Poses can be query string filtered based on `entity_name`, `min_datetime`,
        and `max_datetime`.


        * e.g. `poses/?min_datetime=2015-11-18T18:00:26.756944Z`


        If the *timestamp* field is not provided on creation, it will be assigned
        `datetime.now()`


        The *point* field must be formatted as WKT. (e.g. `"POINT(-90.5 29.5)"`)


        If the *point* field is not provided, the serializer will try to create a
        valid pointfield object using the *lat* and *lon* fields.

        If the *point* field is provided, the *lat* and *lon* fields are ignored.


        Poses can be created with a single json object or through a list of json objects.

        This will create one pose or multiple poses respectively.'
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: max_datetime
        required: false
        in: query
        description: max_datetime
        schema:
          type: string
      - name: min_datetime
        required: false
        in: query
        description: min_datetime
        schema:
          type: string
      - name: entity_name
        required: false
        in: query
        description: entity_name
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pose'
          description: ''
      tags:
      - api
    post:
      operationId: createPose
      description: 'This endpoint represents entity poses


        Poses can be query string filtered based on `entity_name`, `min_datetime`,
        and `max_datetime`.


        * e.g. `poses/?min_datetime=2015-11-18T18:00:26.756944Z`


        If the *timestamp* field is not provided on creation, it will be assigned
        `datetime.now()`


        The *point* field must be formatted as WKT. (e.g. `"POINT(-90.5 29.5)"`)


        If the *point* field is not provided, the serializer will try to create a
        valid pointfield object using the *lat* and *lon* fields.

        If the *point* field is provided, the *lat* and *lon* fields are ignored.


        Poses can be created with a single json object or through a list of json objects.

        This will create one pose or multiple poses respectively.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pose'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pose'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pose'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pose'
          description: ''
      tags:
      - api
  /api/poses/{id}/:
    get:
      operationId: retrievePose
      description: 'This endpoint represents entity poses


        Poses can be query string filtered based on `entity_name`, `min_datetime`,
        and `max_datetime`.


        * e.g. `poses/?min_datetime=2015-11-18T18:00:26.756944Z`


        If the *timestamp* field is not provided on creation, it will be assigned
        `datetime.now()`


        The *point* field must be formatted as WKT. (e.g. `"POINT(-90.5 29.5)"`)


        If the *point* field is not provided, the serializer will try to create a
        valid pointfield object using the *lat* and *lon* fields.

        If the *point* field is provided, the *lat* and *lon* fields are ignored.


        Poses can be created with a single json object or through a list of json objects.

        This will create one pose or multiple poses respectively.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose.
        schema:
          type: string
      - name: max_datetime
        required: false
        in: query
        description: max_datetime
        schema:
          type: string
      - name: min_datetime
        required: false
        in: query
        description: min_datetime
        schema:
          type: string
      - name: entity_name
        required: false
        in: query
        description: entity_name
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pose'
          description: ''
      tags:
      - api
    put:
      operationId: updatePose
      description: 'This endpoint represents entity poses


        Poses can be query string filtered based on `entity_name`, `min_datetime`,
        and `max_datetime`.


        * e.g. `poses/?min_datetime=2015-11-18T18:00:26.756944Z`


        If the *timestamp* field is not provided on creation, it will be assigned
        `datetime.now()`


        The *point* field must be formatted as WKT. (e.g. `"POINT(-90.5 29.5)"`)


        If the *point* field is not provided, the serializer will try to create a
        valid pointfield object using the *lat* and *lon* fields.

        If the *point* field is provided, the *lat* and *lon* fields are ignored.


        Poses can be created with a single json object or through a list of json objects.

        This will create one pose or multiple poses respectively.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose.
        schema:
          type: string
      - name: max_datetime
        required: false
        in: query
        description: max_datetime
        schema:
          type: string
      - name: min_datetime
        required: false
        in: query
        description: min_datetime
        schema:
          type: string
      - name: entity_name
        required: false
        in: query
        description: entity_name
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pose'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pose'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pose'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pose'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePose
      description: 'This endpoint represents entity poses


        Poses can be query string filtered based on `entity_name`, `min_datetime`,
        and `max_datetime`.


        * e.g. `poses/?min_datetime=2015-11-18T18:00:26.756944Z`


        If the *timestamp* field is not provided on creation, it will be assigned
        `datetime.now()`


        The *point* field must be formatted as WKT. (e.g. `"POINT(-90.5 29.5)"`)


        If the *point* field is not provided, the serializer will try to create a
        valid pointfield object using the *lat* and *lon* fields.

        If the *point* field is provided, the *lat* and *lon* fields are ignored.


        Poses can be created with a single json object or through a list of json objects.

        This will create one pose or multiple poses respectively.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose.
        schema:
          type: string
      - name: max_datetime
        required: false
        in: query
        description: max_datetime
        schema:
          type: string
      - name: min_datetime
        required: false
        in: query
        description: min_datetime
        schema:
          type: string
      - name: entity_name
        required: false
        in: query
        description: entity_name
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pose'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pose'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pose'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pose'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPose
      description: 'This endpoint represents entity poses


        Poses can be query string filtered based on `entity_name`, `min_datetime`,
        and `max_datetime`.


        * e.g. `poses/?min_datetime=2015-11-18T18:00:26.756944Z`


        If the *timestamp* field is not provided on creation, it will be assigned
        `datetime.now()`


        The *point* field must be formatted as WKT. (e.g. `"POINT(-90.5 29.5)"`)


        If the *point* field is not provided, the serializer will try to create a
        valid pointfield object using the *lat* and *lon* fields.

        If the *point* field is provided, the *lat* and *lon* fields are ignored.


        Poses can be created with a single json object or through a list of json objects.

        This will create one pose or multiple poses respectively.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pose.
        schema:
          type: string
      - name: max_datetime
        required: false
        in: query
        description: max_datetime
        schema:
          type: string
      - name: min_datetime
        required: false
        in: query
        description: min_datetime
        schema:
          type: string
      - name: entity_name
        required: false
        in: query
        description: entity_name
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/queryset_specifications/:
    get:
      operationId: listQuerySetSpecifications
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuerySetSpecification'
          description: ''
      tags:
      - api
    post:
      operationId: createQuerySetSpecification
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetSpecification'
          description: ''
      tags:
      - api
  /api/queryset_specifications/{id}/:
    get:
      operationId: retrieveQuerySetSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set specification.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetSpecification'
          description: ''
      tags:
      - api
    put:
      operationId: updateQuerySetSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set specification.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetSpecification'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateQuerySetSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set specification.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuerySetSpecification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetSpecification'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyQuerySetSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set specification.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/queryset_methods/:
    get:
      operationId: listQuerySetMethods
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuerySetMethod'
          description: ''
      tags:
      - api
    post:
      operationId: createQuerySetMethod
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetMethod'
          description: ''
      tags:
      - api
  /api/queryset_methods/{id}/:
    get:
      operationId: retrieveQuerySetMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set method.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetMethod'
          description: ''
      tags:
      - api
    put:
      operationId: updateQuerySetMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set method.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetMethod'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateQuerySetMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set method.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuerySetMethod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySetMethod'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyQuerySetMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this query set method.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/extraction_fields/:
    get:
      operationId: listExtractionFields
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtractionField'
          description: ''
      tags:
      - api
    post:
      operationId: createExtractionField
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtractionField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractionField'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionField'
          description: ''
      tags:
      - api
  /api/extraction_fields/{id}/:
    get:
      operationId: retrieveExtractionField
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction field.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionField'
          description: ''
      tags:
      - api
    put:
      operationId: updateExtractionField
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction field.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtractionField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractionField'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionField'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateExtractionField
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction field.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtractionField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractionField'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionField'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyExtractionField
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction field.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/extraction_specications/:
    get:
      operationId: listExtractionSpecifications
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtractionSpecification'
          description: ''
      tags:
      - api
    post:
      operationId: createExtractionSpecification
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionSpecification'
          description: ''
      tags:
      - api
  /api/extraction_specications/{id}/:
    get:
      operationId: retrieveExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction specification.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionSpecification'
          description: ''
      tags:
      - api
    put:
      operationId: updateExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction specification.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionSpecification'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction specification.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractionSpecification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionSpecification'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this extraction specification.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/iterated_extraction_specications/:
    get:
      operationId: listIteratedExtractionSpecifications
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IteratedExtractionSpecification'
          description: ''
      tags:
      - api
    post:
      operationId: createIteratedExtractionSpecification
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedExtractionSpecification'
          description: ''
      tags:
      - api
  /api/iterated_extraction_specications/{id}/:
    get:
      operationId: retrieveIteratedExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated extraction specification.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedExtractionSpecification'
          description: ''
      tags:
      - api
    put:
      operationId: updateIteratedExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated extraction specification.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedExtractionSpecification'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIteratedExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated extraction specification.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IteratedExtractionSpecification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedExtractionSpecification'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIteratedExtractionSpecification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated extraction specification.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/data_manipulators/:
    get:
      operationId: listDataManipulators
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataManipulator'
          description: ''
      tags:
      - api
    post:
      operationId: createDataManipulator
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManipulator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataManipulator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataManipulator'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManipulator'
          description: ''
      tags:
      - api
  /api/data_manipulators/{id}/:
    get:
      operationId: retrieveDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this data manipulator.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManipulator'
          description: ''
      tags:
      - api
    put:
      operationId: updateDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this data manipulator.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManipulator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataManipulator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataManipulator'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManipulator'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this data manipulator.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManipulator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataManipulator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataManipulator'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManipulator'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this data manipulator.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/iterated_data_manipulators/:
    get:
      operationId: listIteratedDataManipulators
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IteratedDataManipulator'
          description: ''
      tags:
      - api
    post:
      operationId: createIteratedDataManipulator
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedDataManipulator'
          description: ''
      tags:
      - api
  /api/iterated_data_manipulators/{id}/:
    get:
      operationId: retrieveIteratedDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated data manipulator.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedDataManipulator'
          description: ''
      tags:
      - api
    put:
      operationId: updateIteratedDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated data manipulator.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedDataManipulator'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIteratedDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated data manipulator.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IteratedDataManipulator'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IteratedDataManipulator'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIteratedDataManipulator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterated data manipulator.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/iterators/:
    get:
      operationId: listIterators
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Iterator'
          description: ''
      tags:
      - api
    post:
      operationId: createIterator
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iterator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Iterator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Iterator'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterator'
          description: ''
      tags:
      - api
  /api/iterators/{id}/:
    get:
      operationId: retrieveIterator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterator.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterator'
          description: ''
      tags:
      - api
    put:
      operationId: updateIterator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterator.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iterator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Iterator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Iterator'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterator'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIterator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterator.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iterator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Iterator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Iterator'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterator'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIterator
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this iterator.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/figure_families/:
    get:
      operationId: listFigureFamilys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FigureFamily'
          description: ''
      tags:
      - api
    post:
      operationId: createFigureFamily
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FigureFamily'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FigureFamily'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FigureFamily'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureFamily'
          description: ''
      tags:
      - api
  /api/figure_families/{id}/:
    get:
      operationId: retrieveFigureFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure family.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureFamily'
          description: ''
      tags:
      - api
    put:
      operationId: updateFigureFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure family.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FigureFamily'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FigureFamily'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FigureFamily'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureFamily'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFigureFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure family.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FigureFamily'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FigureFamily'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FigureFamily'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureFamily'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFigureFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure family.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/figure_types/:
    get:
      operationId: listFigureTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FigureType'
          description: ''
      tags:
      - api
    post:
      operationId: createFigureType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FigureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FigureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FigureType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureType'
          description: ''
      tags:
      - api
  /api/figure_types/{id}/:
    get:
      operationId: retrieveFigureType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureType'
          description: ''
      tags:
      - api
    put:
      operationId: updateFigureType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FigureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FigureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FigureType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFigureType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FigureType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FigureType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FigureType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FigureType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFigureType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this figure type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/reports/:
    get:
      operationId: listReports
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    post:
      operationId: createReport
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
  /api/reports/{id}/:
    get:
      operationId: retrieveReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    put:
      operationId: updateReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/mods/:
    get:
      operationId: listMods
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mod'
          description: ''
      tags:
      - api
    post:
      operationId: createMod
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mod'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
          description: ''
      tags:
      - api
  /api/mods/{name}/:
    get:
      operationId: retrieveMod
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this mod.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
          description: ''
      tags:
      - api
    put:
      operationId: updateMod
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this mod.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMod
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this mod.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMod
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this mod.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/capabilities/:
    get:
      operationId: listCapabilitys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capability'
          description: ''
      tags:
      - api
    post:
      operationId: createCapability
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Capability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Capability'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capability'
          description: ''
      tags:
      - api
  /api/capabilities/{id}/:
    get:
      operationId: retrieveCapability
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capability'
          description: ''
      tags:
      - api
    put:
      operationId: updateCapability
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Capability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Capability'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capability'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCapability
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Capability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Capability'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capability'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCapability
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this capability.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/event_levels/:
    get:
      operationId: listEventLevels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventLevel'
          description: ''
      tags:
      - api
    post:
      operationId: createEventLevel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventLevel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLevel'
          description: ''
      tags:
      - api
  /api/event_levels/{id}/:
    get:
      operationId: retrieveEventLevel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event level.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLevel'
          description: ''
      tags:
      - api
    put:
      operationId: updateEventLevel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event level.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventLevel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLevel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEventLevel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event level.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventLevel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLevel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEventLevel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event level.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/event_types/:
    get:
      operationId: listEventTypes
      description: 'This endpoint represents Event Types.


        The *exclusive_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **created** afterward.  This
        is a two-way relation,

        so events of this type will also be closed (assuming it has_duration) if events
        of the other exclusive_with type are **created**.


        The *resets_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **closed** afterward.
        This is a two-way relation,

        so events of this type will also be closed if events of the other resets_with
        type are **closed**.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
          description: ''
      tags:
      - api
    post:
      operationId: createEventType
      description: 'This endpoint represents Event Types.


        The *exclusive_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **created** afterward.  This
        is a two-way relation,

        so events of this type will also be closed (assuming it has_duration) if events
        of the other exclusive_with type are **created**.


        The *resets_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **closed** afterward.
        This is a two-way relation,

        so events of this type will also be closed if events of the other resets_with
        type are **closed**.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
      tags:
      - api
  /api/event_types/{id}/:
    get:
      operationId: retrieveEventType
      description: 'This endpoint represents Event Types.


        The *exclusive_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **created** afterward.  This
        is a two-way relation,

        so events of this type will also be closed (assuming it has_duration) if events
        of the other exclusive_with type are **created**.


        The *resets_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **closed** afterward.
        This is a two-way relation,

        so events of this type will also be closed if events of the other resets_with
        type are **closed**.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
      tags:
      - api
    put:
      operationId: updateEventType
      description: 'This endpoint represents Event Types.


        The *exclusive_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **created** afterward.  This
        is a two-way relation,

        so events of this type will also be closed (assuming it has_duration) if events
        of the other exclusive_with type are **created**.


        The *resets_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **closed** afterward.
        This is a two-way relation,

        so events of this type will also be closed if events of the other resets_with
        type are **closed**.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEventType
      description: 'This endpoint represents Event Types.


        The *exclusive_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **created** afterward.  This
        is a two-way relation,

        so events of this type will also be closed (assuming it has_duration) if events
        of the other exclusive_with type are **created**.


        The *resets_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **closed** afterward.
        This is a two-way relation,

        so events of this type will also be closed if events of the other resets_with
        type are **closed**.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEventType
      description: 'This endpoint represents Event Types.


        The *exclusive_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **created** afterward.  This
        is a two-way relation,

        so events of this type will also be closed (assuming it has_duration) if events
        of the other exclusive_with type are **created**.


        The *resets_with* field can be used to set other event types that, if they
        have duration, will be closed

        (their end_datetime set) when an event of this type is **closed** afterward.
        This is a two-way relation,

        so events of this type will also be closed if events of the other resets_with
        type are **closed**.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/events/:
    get:
      operationId: listEvents
      description: "Events can be query string filtered based on `trial`, `performer`,\
        \ `event_type`, `event_type_name`,\n`event_level`, `weather`, `modified_since`,\
        \ and `exclude_related_entities`.\nThe `event_level_gte` query string returns\
        \ all events that have an event level greater than or equal to the input value.\n\
        The `metadata_contains` query string returns all events that contain the input\
        \ value in either the key or the value (not case sensitive).\nThe `modified_since`\
        \ query string takes as input the same string formatted datetime objects as\
        \ returned by the API.\n    It returns events that are strictly more recent\
        \ than the query string parameter (i.e. it will not return an event whose\n\
        \    modified_datetime exactly matches the query string parameter.)\nThe `exclude_related_entities`\
        \ query string returns all events that are not related to the specified entities\
        \ (referenced by entity name).\n    If the input value is null, the query\
        \ will return all events that have related entities.\n\n* e.g. `events/?trial=1`\n\
        * e.g. `events/?event_level_gte=3`\n* e.g. `events/?metadata_contains=vehicle`\n\
        * e.g. `events/?modified_since=2015-07-27T11:23:11.239776`\n* e.g. `events/?exclude_related_entities=example_entity`\n\
        \nThe `performer`, `event_type`, `event_id`, and `exclude_related_entities`\
        \ querystrings can accept a tethered list of values.\n\n* e.g. `events/?event_type=Unassigned&event_type=Safety+Stop`\n\
        \nEvents can also be query string ordered based on *start_datetime* and *modified_datetime*.\
        \  Prepending with `-` sorts\n  in decreasing order.\n\n* e.g. `events/?ordering=-modified_datetime`\n\
        \nThere are also format suffixes and format queries that will change the format\
        \ of the API.\nFor example, `/api/events.json` or `/api/events/?format=json`\
        \ will provide the events in a json encoded output.\n\nThe list of possible\
        \ formats for events include `json`, `csv` file download, and in-browser `txt`\
        \ format.\nThe `csv` and `txt` formats share the same serialization and differ\
        \ from the default `json` format. \nIt is intended to provide a flat serialization\
        \ for Pandas DataFrame manipulation."
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      - name: event_id
        required: false
        in: query
        description: event_id
        schema:
          type: string
      - name: event_type
        required: false
        in: query
        description: event_type
        schema:
          type: string
      - name: event_level_gte
        required: false
        in: query
        description: event_level_gte
        schema:
          type: string
      - name: has_no_pose
        required: false
        in: query
        description: has_no_pose
        schema:
          type: string
      - name: metadata_contains
        required: false
        in: query
        description: metadata_contains
        schema:
          type: string
      - name: weather
        required: false
        in: query
        description: weather
        schema:
          type: string
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      - name: trial_id_major
        required: false
        in: query
        description: trial_id_major
        schema:
          type: string
      - name: trial_id_minor
        required: false
        in: query
        description: trial_id_minor
        schema:
          type: string
      - name: trial_id_micro
        required: false
        in: query
        description: trial_id_micro
        schema:
          type: string
      - name: performer
        required: false
        in: query
        description: performer
        schema:
          type: string
      - name: event_type_id
        required: false
        in: query
        description: event_type_id
        schema:
          type: string
      - name: exclude_related_entities
        required: false
        in: query
        description: exclude_related_entities
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
            text/csv:
              schema:
                type: object
                properties:
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
            text/plain:
              schema:
                type: object
                properties:
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - api
    post:
      operationId: createEvent
      description: "If a new event is submitted without an associated *start_datetime*,\
        \ it will be assigned as `datetime.now()`.\n\nIf a new event is submitted\
        \ without an associated trial, one will be attempted to be matched.  The matched\
        \ trial\nis the earliest trial whose start_datetime and end_datetime overlap\
        \ the new event's *start_datetime*.  If one cannot be\nfound, *400 bad request*\
        \ error is returned.\n\nIf a new event is submitted without an associated\
        \ trigger, it will be assigned as either the first trigger or null\n(if no\
        \ triggers exist).\n\nEntities can be associated with events by including\
        \ them in previously-configured (via entity_event_roles) metadata fields.\n\
        The metadata key in the event must match the `metadata_key` set in `entity_event_roles`\
        \ for the desired role. The metadata \nvalue must match an entity name (or\
        \ list of entity names). If both metadata key and value match, and the event\
        \ type, entity \ntype, and entity group requirements on the role are met,\
        \ the relation will be created and the entities and respective roles \nwill\
        \ be serialized within the event. \n\nEvents can be created with a single\
        \ json object or through a list of json objects.\nThis will create one event\
        \ or multiple events respectively."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event'
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - api
  /api/events/{id}/:
    get:
      operationId: retrieveEvent
      description: Retrieve an event
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event.
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      - name: event_id
        required: false
        in: query
        description: event_id
        schema:
          type: string
      - name: event_type
        required: false
        in: query
        description: event_type
        schema:
          type: string
      - name: event_level_gte
        required: false
        in: query
        description: event_level_gte
        schema:
          type: string
      - name: has_no_pose
        required: false
        in: query
        description: has_no_pose
        schema:
          type: string
      - name: metadata_contains
        required: false
        in: query
        description: metadata_contains
        schema:
          type: string
      - name: weather
        required: false
        in: query
        description: weather
        schema:
          type: string
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      - name: trial_id_major
        required: false
        in: query
        description: trial_id_major
        schema:
          type: string
      - name: trial_id_minor
        required: false
        in: query
        description: trial_id_minor
        schema:
          type: string
      - name: trial_id_micro
        required: false
        in: query
        description: trial_id_micro
        schema:
          type: string
      - name: performer
        required: false
        in: query
        description: performer
        schema:
          type: string
      - name: event_type_id
        required: false
        in: query
        description: event_type_id
        schema:
          type: string
      - name: exclude_related_entities
        required: false
        in: query
        description: exclude_related_entities
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event'
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - api
    put:
      operationId: updateEvent
      description: "If the metadata is updated (via PUT/PATCH), the `related_entities`\
        \ will be re-created. This may result in\nremoval of entity relations if either\
        \ the key or value no longer match valid options. Any entity names that are\
        \ associated with \na matching `metadata_key`, but are not found in entity\
        \ lookup will be added to the `unfound_entities` list. If the entity \nexists,\
        \ but role requirements are not met, the entity name will be added to the\
        \ `invalid_entities` list. See \n`/api/entity_event_roles` for additional\
        \ information."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event.
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      - name: event_id
        required: false
        in: query
        description: event_id
        schema:
          type: string
      - name: event_type
        required: false
        in: query
        description: event_type
        schema:
          type: string
      - name: event_level_gte
        required: false
        in: query
        description: event_level_gte
        schema:
          type: string
      - name: has_no_pose
        required: false
        in: query
        description: has_no_pose
        schema:
          type: string
      - name: metadata_contains
        required: false
        in: query
        description: metadata_contains
        schema:
          type: string
      - name: weather
        required: false
        in: query
        description: weather
        schema:
          type: string
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      - name: trial_id_major
        required: false
        in: query
        description: trial_id_major
        schema:
          type: string
      - name: trial_id_minor
        required: false
        in: query
        description: trial_id_minor
        schema:
          type: string
      - name: trial_id_micro
        required: false
        in: query
        description: trial_id_micro
        schema:
          type: string
      - name: performer
        required: false
        in: query
        description: performer
        schema:
          type: string
      - name: event_type_id
        required: false
        in: query
        description: event_type_id
        schema:
          type: string
      - name: exclude_related_entities
        required: false
        in: query
        description: exclude_related_entities
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event'
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEvent
      description: "If the metadata is updated (via PUT/PATCH), the `related_entities`\
        \ will be re-created. This may result in\nremoval of entity relations if either\
        \ the key or value no longer match valid options. Any entity names that are\
        \ associated with \na matching `metadata_key`, but are not found in entity\
        \ lookup will be added to the `unfound_entities` list. If the entity \nexists,\
        \ but role requirements are not met, the entity name will be added to the\
        \ `invalid_entities` list. See \n`/api/entity_event_roles` for additional\
        \ information."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event.
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      - name: event_id
        required: false
        in: query
        description: event_id
        schema:
          type: string
      - name: event_type
        required: false
        in: query
        description: event_type
        schema:
          type: string
      - name: event_level_gte
        required: false
        in: query
        description: event_level_gte
        schema:
          type: string
      - name: has_no_pose
        required: false
        in: query
        description: has_no_pose
        schema:
          type: string
      - name: metadata_contains
        required: false
        in: query
        description: metadata_contains
        schema:
          type: string
      - name: weather
        required: false
        in: query
        description: weather
        schema:
          type: string
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      - name: trial_id_major
        required: false
        in: query
        description: trial_id_major
        schema:
          type: string
      - name: trial_id_minor
        required: false
        in: query
        description: trial_id_minor
        schema:
          type: string
      - name: trial_id_micro
        required: false
        in: query
        description: trial_id_micro
        schema:
          type: string
      - name: performer
        required: false
        in: query
        description: performer
        schema:
          type: string
      - name: event_type_id
        required: false
        in: query
        description: event_type_id
        schema:
          type: string
      - name: exclude_related_entities
        required: false
        in: query
        description: exclude_related_entities
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/csv:
              schema:
                $ref: '#/components/schemas/Event'
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEvent
      description: Delete an event
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this event.
        schema:
          type: string
      - name: trial
        required: false
        in: query
        description: trial
        schema:
          type: string
      - name: event_id
        required: false
        in: query
        description: event_id
        schema:
          type: string
      - name: event_type
        required: false
        in: query
        description: event_type
        schema:
          type: string
      - name: event_level_gte
        required: false
        in: query
        description: event_level_gte
        schema:
          type: string
      - name: has_no_pose
        required: false
        in: query
        description: has_no_pose
        schema:
          type: string
      - name: metadata_contains
        required: false
        in: query
        description: metadata_contains
        schema:
          type: string
      - name: weather
        required: false
        in: query
        description: weather
        schema:
          type: string
      - name: modified_since
        required: false
        in: query
        description: modified_since
        schema:
          type: string
      - name: trial_id_major
        required: false
        in: query
        description: trial_id_major
        schema:
          type: string
      - name: trial_id_minor
        required: false
        in: query
        description: trial_id_minor
        schema:
          type: string
      - name: trial_id_micro
        required: false
        in: query
        description: trial_id_micro
        schema:
          type: string
      - name: performer
        required: false
        in: query
        description: performer
        schema:
          type: string
      - name: event_type_id
        required: false
        in: query
        description: event_type_id
        schema:
          type: string
      - name: exclude_related_entities
        required: false
        in: query
        description: exclude_related_entities
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/segments/:
    get:
      operationId: listSegments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    post:
      operationId: createSegment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Segment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Segment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
  /api/segments/{id}/:
    get:
      operationId: retrieveSegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    put:
      operationId: updateSegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Segment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Segment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Segment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Segment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/notes/:
    get:
      operationId: listNotes
      description: 'This endpoint represents notes on events.


        If a new note is submitted without an associated *tester* field, the system
        will attempt to determine the current

        tester based on the current user and their role set in their profile.  If
        the user has no profile or if there is no

        tester with the user/role combination, a 400 error is returned.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    post:
      operationId: createNote
      description: 'This endpoint represents notes on events.


        If a new note is submitted without an associated *tester* field, the system
        will attempt to determine the current

        tester based on the current user and their role set in their profile.  If
        the user has no profile or if there is no

        tester with the user/role combination, a 400 error is returned.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
  /api/notes/{id}/:
    get:
      operationId: retrieveNote
      description: 'This endpoint represents notes on events.


        If a new note is submitted without an associated *tester* field, the system
        will attempt to determine the current

        tester based on the current user and their role set in their profile.  If
        the user has no profile or if there is no

        tester with the user/role combination, a 400 error is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    put:
      operationId: updateNote
      description: 'This endpoint represents notes on events.


        If a new note is submitted without an associated *tester* field, the system
        will attempt to determine the current

        tester based on the current user and their role set in their profile.  If
        the user has no profile or if there is no

        tester with the user/role combination, a 400 error is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateNote
      description: 'This endpoint represents notes on events.


        If a new note is submitted without an associated *tester* field, the system
        will attempt to determine the current

        tester based on the current user and their role set in their profile.  If
        the user has no profile or if there is no

        tester with the user/role combination, a 400 error is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyNote
      description: 'This endpoint represents notes on events.


        If a new note is submitted without an associated *tester* field, the system
        will attempt to determine the current

        tester based on the current user and their role set in their profile.  If
        the user has no profile or if there is no

        tester with the user/role combination, a 400 error is returned.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/image_types/:
    get:
      operationId: listImageTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageType'
          description: ''
      tags:
      - api
    post:
      operationId: createImageType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageType'
          description: ''
      tags:
      - api
  /api/image_types/{id}/:
    get:
      operationId: retrieveImageType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageType'
          description: ''
      tags:
      - api
    put:
      operationId: updateImageType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateImageType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyImageType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/images/:
    get:
      operationId: listImages
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - api
    post:
      operationId: createImage
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - api
  /api/images/{id}/:
    get:
      operationId: retrieveImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - api
    put:
      operationId: updateImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/server_types/:
    get:
      operationId: listServerTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerType'
          description: ''
      tags:
      - api
    post:
      operationId: createServerType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: ''
      tags:
      - api
  /api/server_types/{id}/:
    get:
      operationId: retrieveServerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: ''
      tags:
      - api
    put:
      operationId: updateServerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateServerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyServerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/server_params/:
    get:
      operationId: listServerParams
      description: "This endpoint represents arbitrary server parameters.  These are\
        \ used to provide additional information to the frontend\nfor configuring\
        \ the server.  Currently, this is used to set the center and zoom extents\
        \ of tiled map servers.\n\nFor example\n    name='Normal Layer Options',\n\
        \    description='',\n    param='layerOptions',\n    value='{\"minZoom\":12,\
        \ \"maxZoom\":20, \"maxNativeZoom\":18}')\n\nThe value parameter must be one\
        \ of *string*, *number*, *tuple*, *list*, *dictionary*, or *boolean*."
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerParam'
          description: ''
      tags:
      - api
    post:
      operationId: createServerParam
      description: "This endpoint represents arbitrary server parameters.  These are\
        \ used to provide additional information to the frontend\nfor configuring\
        \ the server.  Currently, this is used to set the center and zoom extents\
        \ of tiled map servers.\n\nFor example\n    name='Normal Layer Options',\n\
        \    description='',\n    param='layerOptions',\n    value='{\"minZoom\":12,\
        \ \"maxZoom\":20, \"maxNativeZoom\":18}')\n\nThe value parameter must be one\
        \ of *string*, *number*, *tuple*, *list*, *dictionary*, or *boolean*."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerParam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerParam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerParam'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerParam'
          description: ''
      tags:
      - api
  /api/server_params/{id}/:
    get:
      operationId: retrieveServerParam
      description: "This endpoint represents arbitrary server parameters.  These are\
        \ used to provide additional information to the frontend\nfor configuring\
        \ the server.  Currently, this is used to set the center and zoom extents\
        \ of tiled map servers.\n\nFor example\n    name='Normal Layer Options',\n\
        \    description='',\n    param='layerOptions',\n    value='{\"minZoom\":12,\
        \ \"maxZoom\":20, \"maxNativeZoom\":18}')\n\nThe value parameter must be one\
        \ of *string*, *number*, *tuple*, *list*, *dictionary*, or *boolean*."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server param.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerParam'
          description: ''
      tags:
      - api
    put:
      operationId: updateServerParam
      description: "This endpoint represents arbitrary server parameters.  These are\
        \ used to provide additional information to the frontend\nfor configuring\
        \ the server.  Currently, this is used to set the center and zoom extents\
        \ of tiled map servers.\n\nFor example\n    name='Normal Layer Options',\n\
        \    description='',\n    param='layerOptions',\n    value='{\"minZoom\":12,\
        \ \"maxZoom\":20, \"maxNativeZoom\":18}')\n\nThe value parameter must be one\
        \ of *string*, *number*, *tuple*, *list*, *dictionary*, or *boolean*."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server param.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerParam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerParam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerParam'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateServerParam
      description: "This endpoint represents arbitrary server parameters.  These are\
        \ used to provide additional information to the frontend\nfor configuring\
        \ the server.  Currently, this is used to set the center and zoom extents\
        \ of tiled map servers.\n\nFor example\n    name='Normal Layer Options',\n\
        \    description='',\n    param='layerOptions',\n    value='{\"minZoom\":12,\
        \ \"maxZoom\":20, \"maxNativeZoom\":18}')\n\nThe value parameter must be one\
        \ of *string*, *number*, *tuple*, *list*, *dictionary*, or *boolean*."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server param.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerParam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerParam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerParam'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyServerParam
      description: "This endpoint represents arbitrary server parameters.  These are\
        \ used to provide additional information to the frontend\nfor configuring\
        \ the server.  Currently, this is used to set the center and zoom extents\
        \ of tiled map servers.\n\nFor example\n    name='Normal Layer Options',\n\
        \    description='',\n    param='layerOptions',\n    value='{\"minZoom\":12,\
        \ \"maxZoom\":20, \"maxNativeZoom\":18}')\n\nThe value parameter must be one\
        \ of *string*, *number*, *tuple*, *list*, *dictionary*, or *boolean*."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server param.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/servers/:
    get:
      operationId: listServers
      description: 'This endpoint represents available servers. These are used to
        configure the frontend videos, maps, etc.


        Servers can be query string filtered based on `name`, `server_type`, `active`,
        and `server_type_key`.


        * e.g. `servers/?server_type_key=mjpeg`


        The *base_url* field supports `{window.location.hostname}` instead of a valid
        hostname.  In this case, the current

        page''s hostname will be substituted for the server hostname.


        * e.g. `base_url=''http://{window.location.hostname}:8081/map/{z}/{x}/{y}.png''`'
      parameters:
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: server_type
        required: false
        in: query
        description: server_type
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: server_type_key
        required: false
        in: query
        description: server_type_key
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
          description: ''
      tags:
      - api
    post:
      operationId: createServer
      description: 'This endpoint represents available servers. These are used to
        configure the frontend videos, maps, etc.


        Servers can be query string filtered based on `name`, `server_type`, `active`,
        and `server_type_key`.


        * e.g. `servers/?server_type_key=mjpeg`


        The *base_url* field supports `{window.location.hostname}` instead of a valid
        hostname.  In this case, the current

        page''s hostname will be substituted for the server hostname.


        * e.g. `base_url=''http://{window.location.hostname}:8081/map/{z}/{x}/{y}.png''`'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
      tags:
      - api
  /api/servers/{id}/:
    get:
      operationId: retrieveServer
      description: 'This endpoint represents available servers. These are used to
        configure the frontend videos, maps, etc.


        Servers can be query string filtered based on `name`, `server_type`, `active`,
        and `server_type_key`.


        * e.g. `servers/?server_type_key=mjpeg`


        The *base_url* field supports `{window.location.hostname}` instead of a valid
        hostname.  In this case, the current

        page''s hostname will be substituted for the server hostname.


        * e.g. `base_url=''http://{window.location.hostname}:8081/map/{z}/{x}/{y}.png''`'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: server_type
        required: false
        in: query
        description: server_type
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: server_type_key
        required: false
        in: query
        description: server_type_key
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
      tags:
      - api
    put:
      operationId: updateServer
      description: 'This endpoint represents available servers. These are used to
        configure the frontend videos, maps, etc.


        Servers can be query string filtered based on `name`, `server_type`, `active`,
        and `server_type_key`.


        * e.g. `servers/?server_type_key=mjpeg`


        The *base_url* field supports `{window.location.hostname}` instead of a valid
        hostname.  In this case, the current

        page''s hostname will be substituted for the server hostname.


        * e.g. `base_url=''http://{window.location.hostname}:8081/map/{z}/{x}/{y}.png''`'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: server_type
        required: false
        in: query
        description: server_type
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: server_type_key
        required: false
        in: query
        description: server_type_key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateServer
      description: 'This endpoint represents available servers. These are used to
        configure the frontend videos, maps, etc.


        Servers can be query string filtered based on `name`, `server_type`, `active`,
        and `server_type_key`.


        * e.g. `servers/?server_type_key=mjpeg`


        The *base_url* field supports `{window.location.hostname}` instead of a valid
        hostname.  In this case, the current

        page''s hostname will be substituted for the server hostname.


        * e.g. `base_url=''http://{window.location.hostname}:8081/map/{z}/{x}/{y}.png''`'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: server_type
        required: false
        in: query
        description: server_type
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: server_type_key
        required: false
        in: query
        description: server_type_key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyServer
      description: 'This endpoint represents available servers. These are used to
        configure the frontend videos, maps, etc.


        Servers can be query string filtered based on `name`, `server_type`, `active`,
        and `server_type_key`.


        * e.g. `servers/?server_type_key=mjpeg`


        The *base_url* field supports `{window.location.hostname}` instead of a valid
        hostname.  In this case, the current

        page''s hostname will be substituted for the server hostname.


        * e.g. `base_url=''http://{window.location.hostname}:8081/map/{z}/{x}/{y}.png''`'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: server_type
        required: false
        in: query
        description: server_type
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: server_type_key
        required: false
        in: query
        description: server_type_key
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/key_value_pairs/:
    get:
      operationId: listKeyValuePairs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValuePair'
          description: ''
      tags:
      - api
    post:
      operationId: createKeyValuePair
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValuePair'
          description: ''
      tags:
      - api
  /api/key_value_pairs/{id}/:
    get:
      operationId: retrieveKeyValuePair
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this key value pair.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValuePair'
          description: ''
      tags:
      - api
    put:
      operationId: updateKeyValuePair
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this key value pair.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValuePair'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateKeyValuePair
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this key value pair.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KeyValuePair'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValuePair'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyKeyValuePair
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this key value pair.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/trigger_responses/:
    get:
      operationId: listTriggerResponses
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TriggerResponse'
          description: ''
      tags:
      - api
    post:
      operationId: createTriggerResponse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResponse'
          description: ''
      tags:
      - api
  /api/trigger_responses/{id}/:
    get:
      operationId: retrieveTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger response.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResponse'
          description: ''
      tags:
      - api
    put:
      operationId: updateTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger response.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResponse'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger response.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerResponse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResponse'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger response.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/ordered_trigger_responses/:
    get:
      operationId: listOrderedTriggerResponses
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderedTriggerResponse'
          description: ''
      tags:
      - api
    post:
      operationId: createOrderedTriggerResponse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderedTriggerResponse'
          description: ''
      tags:
      - api
  /api/ordered_trigger_responses/{id}/:
    get:
      operationId: retrieveOrderedTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ordered trigger response.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderedTriggerResponse'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrderedTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ordered trigger response.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderedTriggerResponse'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrderedTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ordered trigger response.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderedTriggerResponse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderedTriggerResponse'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrderedTriggerResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ordered trigger response.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/triggers/:
    get:
      operationId: listTriggers
      description: 'This endpoint represents event triggers.


        There is a `triggers/publish` endpoint that will queue messages to configure
        triggers in the event generator.

        A trigger_setup message will also be automatically queued whenever a trigger
        is created or modified.'
      parameters:
      - name: key
        required: false
        in: query
        description: key
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'
          description: ''
      tags:
      - api
    post:
      operationId: createTrigger
      description: 'This endpoint represents event triggers.


        There is a `triggers/publish` endpoint that will queue messages to configure
        triggers in the event generator.

        A trigger_setup message will also be automatically queued whenever a trigger
        is created or modified.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: ''
      tags:
      - api
  /api/triggers/{id}/:
    get:
      operationId: retrieveTrigger
      description: 'This endpoint represents event triggers.


        There is a `triggers/publish` endpoint that will queue messages to configure
        triggers in the event generator.

        A trigger_setup message will also be automatically queued whenever a trigger
        is created or modified.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger.
        schema:
          type: string
      - name: key
        required: false
        in: query
        description: key
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: ''
      tags:
      - api
    put:
      operationId: updateTrigger
      description: 'This endpoint represents event triggers.


        There is a `triggers/publish` endpoint that will queue messages to configure
        triggers in the event generator.

        A trigger_setup message will also be automatically queued whenever a trigger
        is created or modified.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger.
        schema:
          type: string
      - name: key
        required: false
        in: query
        description: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTrigger
      description: 'This endpoint represents event triggers.


        There is a `triggers/publish` endpoint that will queue messages to configure
        triggers in the event generator.

        A trigger_setup message will also be automatically queued whenever a trigger
        is created or modified.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger.
        schema:
          type: string
      - name: key
        required: false
        in: query
        description: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trigger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTrigger
      description: 'This endpoint represents event triggers.


        There is a `triggers/publish` endpoint that will queue messages to configure
        triggers in the event generator.

        A trigger_setup message will also be automatically queued whenever a trigger
        is created or modified.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this trigger.
        schema:
          type: string
      - name: key
        required: false
        in: query
        description: key
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/condition_variables/:
    get:
      operationId: listConditionVariables
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionVariable'
          description: ''
      tags:
      - api
    post:
      operationId: createConditionVariable
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionVariable'
          description: ''
      tags:
      - api
  /api/condition_variables/{id}/:
    get:
      operationId: retrieveConditionVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition variable.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionVariable'
          description: ''
      tags:
      - api
    put:
      operationId: updateConditionVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition variable.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionVariable'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateConditionVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition variable.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionVariable'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionVariable'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyConditionVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition variable.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/requested_data/:
    get:
      operationId: listRequestedDatas
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestedData'
          description: ''
      tags:
      - api
    post:
      operationId: createRequestedData
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestedData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestedData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestedData'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestedData'
          description: ''
      tags:
      - api
  /api/requested_data/{id}/:
    get:
      operationId: retrieveRequestedData
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this requested data.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestedData'
          description: ''
      tags:
      - api
    put:
      operationId: updateRequestedData
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this requested data.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestedData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestedData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestedData'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestedData'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRequestedData
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this requested data.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestedData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestedData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestedData'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestedData'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRequestedData
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this requested data.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/regions/:
    get:
      operationId: listRegions
      description: 'This endpoint represents an area of interests. Regions can be
        specified in two formats.


        * Well Known Text (WKT): `POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))`


        * GeoJSON: `{"type": "Polygon", "coordinates": [[[30.0, 10.0], [40.0, 40.0],
        [20.0, 40.0], [10.0, 20.0], [30.0, 10.0]]]}`


        Three parameters are accepted for intersection lookup: `latitude`, `longtitude`,
        and `z_layer`.

        If parameter `z_layer` is not provided, a default value of 1.0 will be applied
        to the filter

        indicating the region only has one layer (e.g an area of interest with three
        story buildings

        would have `z_layer` of 1.0, 2.0, 3.0).


        * e.g. `/api/regions?longitude=-122.5522033935786&latitude=47.03151963129993&z_layer=1`


        The *key_point* field is an optional field that can be used to indicate an
        important point of a region.

        The querystring parameter `nearest_key_point_to` can be used to query the
        closest region via *key_point*.


        * e.g. `/api/regions?nearest_key_point_to=10,30 # latitude, longitude`'
      parameters:
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: region_type
        required: false
        in: query
        description: region_type
        schema:
          type: string
      - name: z_layer
        required: false
        in: query
        description: z_layer
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
          description: ''
      tags:
      - api
    post:
      operationId: createRegion
      description: 'This endpoint represents an area of interests. Regions can be
        specified in two formats.


        * Well Known Text (WKT): `POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))`


        * GeoJSON: `{"type": "Polygon", "coordinates": [[[30.0, 10.0], [40.0, 40.0],
        [20.0, 40.0], [10.0, 20.0], [30.0, 10.0]]]}`


        Three parameters are accepted for intersection lookup: `latitude`, `longtitude`,
        and `z_layer`.

        If parameter `z_layer` is not provided, a default value of 1.0 will be applied
        to the filter

        indicating the region only has one layer (e.g an area of interest with three
        story buildings

        would have `z_layer` of 1.0, 2.0, 3.0).


        * e.g. `/api/regions?longitude=-122.5522033935786&latitude=47.03151963129993&z_layer=1`


        The *key_point* field is an optional field that can be used to indicate an
        important point of a region.

        The querystring parameter `nearest_key_point_to` can be used to query the
        closest region via *key_point*.


        * e.g. `/api/regions?nearest_key_point_to=10,30 # latitude, longitude`'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
      tags:
      - api
  /api/regions/{name}/:
    get:
      operationId: retrieveRegion
      description: 'This endpoint represents an area of interests. Regions can be
        specified in two formats.


        * Well Known Text (WKT): `POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))`


        * GeoJSON: `{"type": "Polygon", "coordinates": [[[30.0, 10.0], [40.0, 40.0],
        [20.0, 40.0], [10.0, 20.0], [30.0, 10.0]]]}`


        Three parameters are accepted for intersection lookup: `latitude`, `longtitude`,
        and `z_layer`.

        If parameter `z_layer` is not provided, a default value of 1.0 will be applied
        to the filter

        indicating the region only has one layer (e.g an area of interest with three
        story buildings

        would have `z_layer` of 1.0, 2.0, 3.0).


        * e.g. `/api/regions?longitude=-122.5522033935786&latitude=47.03151963129993&z_layer=1`


        The *key_point* field is an optional field that can be used to indicate an
        important point of a region.

        The querystring parameter `nearest_key_point_to` can be used to query the
        closest region via *key_point*.


        * e.g. `/api/regions?nearest_key_point_to=10,30 # latitude, longitude`'
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: region_type
        required: false
        in: query
        description: region_type
        schema:
          type: string
      - name: z_layer
        required: false
        in: query
        description: z_layer
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
      tags:
      - api
    put:
      operationId: updateRegion
      description: 'This endpoint represents an area of interests. Regions can be
        specified in two formats.


        * Well Known Text (WKT): `POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))`


        * GeoJSON: `{"type": "Polygon", "coordinates": [[[30.0, 10.0], [40.0, 40.0],
        [20.0, 40.0], [10.0, 20.0], [30.0, 10.0]]]}`


        Three parameters are accepted for intersection lookup: `latitude`, `longtitude`,
        and `z_layer`.

        If parameter `z_layer` is not provided, a default value of 1.0 will be applied
        to the filter

        indicating the region only has one layer (e.g an area of interest with three
        story buildings

        would have `z_layer` of 1.0, 2.0, 3.0).


        * e.g. `/api/regions?longitude=-122.5522033935786&latitude=47.03151963129993&z_layer=1`


        The *key_point* field is an optional field that can be used to indicate an
        important point of a region.

        The querystring parameter `nearest_key_point_to` can be used to query the
        closest region via *key_point*.


        * e.g. `/api/regions?nearest_key_point_to=10,30 # latitude, longitude`'
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: region_type
        required: false
        in: query
        description: region_type
        schema:
          type: string
      - name: z_layer
        required: false
        in: query
        description: z_layer
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRegion
      description: 'This endpoint represents an area of interests. Regions can be
        specified in two formats.


        * Well Known Text (WKT): `POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))`


        * GeoJSON: `{"type": "Polygon", "coordinates": [[[30.0, 10.0], [40.0, 40.0],
        [20.0, 40.0], [10.0, 20.0], [30.0, 10.0]]]}`


        Three parameters are accepted for intersection lookup: `latitude`, `longtitude`,
        and `z_layer`.

        If parameter `z_layer` is not provided, a default value of 1.0 will be applied
        to the filter

        indicating the region only has one layer (e.g an area of interest with three
        story buildings

        would have `z_layer` of 1.0, 2.0, 3.0).


        * e.g. `/api/regions?longitude=-122.5522033935786&latitude=47.03151963129993&z_layer=1`


        The *key_point* field is an optional field that can be used to indicate an
        important point of a region.

        The querystring parameter `nearest_key_point_to` can be used to query the
        closest region via *key_point*.


        * e.g. `/api/regions?nearest_key_point_to=10,30 # latitude, longitude`'
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: region_type
        required: false
        in: query
        description: region_type
        schema:
          type: string
      - name: z_layer
        required: false
        in: query
        description: z_layer
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRegion
      description: 'This endpoint represents an area of interests. Regions can be
        specified in two formats.


        * Well Known Text (WKT): `POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))`


        * GeoJSON: `{"type": "Polygon", "coordinates": [[[30.0, 10.0], [40.0, 40.0],
        [20.0, 40.0], [10.0, 20.0], [30.0, 10.0]]]}`


        Three parameters are accepted for intersection lookup: `latitude`, `longtitude`,
        and `z_layer`.

        If parameter `z_layer` is not provided, a default value of 1.0 will be applied
        to the filter

        indicating the region only has one layer (e.g an area of interest with three
        story buildings

        would have `z_layer` of 1.0, 2.0, 3.0).


        * e.g. `/api/regions?longitude=-122.5522033935786&latitude=47.03151963129993&z_layer=1`


        The *key_point* field is an optional field that can be used to indicate an
        important point of a region.

        The querystring parameter `nearest_key_point_to` can be used to query the
        closest region via *key_point*.


        * e.g. `/api/regions?nearest_key_point_to=10,30 # latitude, longitude`'
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: region_type
        required: false
        in: query
        description: region_type
        schema:
          type: string
      - name: z_layer
        required: false
        in: query
        description: z_layer
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/region_types/:
    get:
      operationId: listRegionTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegionType'
          description: ''
      tags:
      - api
    post:
      operationId: createRegionType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegionType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionType'
          description: ''
      tags:
      - api
  /api/region_types/{name}/:
    get:
      operationId: retrieveRegionType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionType'
          description: ''
      tags:
      - api
    put:
      operationId: updateRegionType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegionType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRegionType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegionType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRegionType
      description: ''
      parameters:
      - name: name
        in: path
        required: true
        description: A unique value identifying this region type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clock_configs/:
    get:
      operationId: listClockConfigs
      description: Configuration for Mole experimentation clock.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClockConfig'
          description: ''
      tags:
      - api
    post:
      operationId: createClockConfig
      description: Configuration for Mole experimentation clock.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClockConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClockConfig'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockConfig'
          description: ''
      tags:
      - api
  /api/clock_configs/{id}/:
    get:
      operationId: retrieveClockConfig
      description: Configuration for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock config.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockConfig'
          description: ''
      tags:
      - api
    put:
      operationId: updateClockConfig
      description: Configuration for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock config.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClockConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClockConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockConfig'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateClockConfig
      description: Configuration for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock config.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClockConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClockConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockConfig'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyClockConfig
      description: Configuration for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock config.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clock_phases/:
    get:
      operationId: listClockPhases
      description: Phases for Mole experimentation clock.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClockPhase'
          description: ''
      tags:
      - api
    post:
      operationId: createClockPhase
      description: Phases for Mole experimentation clock.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockPhase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClockPhase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClockPhase'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockPhase'
          description: ''
      tags:
      - api
  /api/clock_phases/{id}/:
    get:
      operationId: retrieveClockPhase
      description: Phases for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock phase.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockPhase'
          description: ''
      tags:
      - api
    put:
      operationId: updateClockPhase
      description: Phases for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock phase.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockPhase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClockPhase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClockPhase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockPhase'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateClockPhase
      description: Phases for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock phase.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockPhase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClockPhase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClockPhase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockPhase'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyClockPhase
      description: Phases for Mole experimentation clock.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this clock phase.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/scripts/:
    get:
      operationId: listScripts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Script'
          description: ''
      tags:
      - api
    post:
      operationId: createScript
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Script'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Script'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
          description: ''
      tags:
      - api
  /api/scripts/{id}/:
    get:
      operationId: retrieveScript
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
          description: ''
      tags:
      - api
    put:
      operationId: updateScript
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Script'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Script'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateScript
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Script'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Script'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyScript
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/scripted_events/:
    get:
      operationId: listScriptedEvents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptedEvent'
          description: ''
      tags:
      - api
    post:
      operationId: createScriptedEvent
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptedEvent'
          description: ''
      tags:
      - api
  /api/scripted_events/{id}/:
    get:
      operationId: retrieveScriptedEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scripted event.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptedEvent'
          description: ''
      tags:
      - api
    put:
      operationId: updateScriptedEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scripted event.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptedEvent'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateScriptedEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scripted event.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScriptedEvent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptedEvent'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyScriptedEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this scripted event.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/script_conditions/:
    get:
      operationId: listScriptConditions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptCondition'
          description: ''
      tags:
      - api
    post:
      operationId: createScriptCondition
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptCondition'
          description: ''
      tags:
      - api
  /api/script_conditions/{id}/:
    get:
      operationId: retrieveScriptCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script condition.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptCondition'
          description: ''
      tags:
      - api
    put:
      operationId: updateScriptCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script condition.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptCondition'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateScriptCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script condition.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScriptCondition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptCondition'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyScriptCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this script condition.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/:
    get:
      operationId: listAPIRoots
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        profile:
          type: string
          readOnly: true
          nullable: true
      required:
      - username
      - password
    UserProfile:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        user:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            username:
              type: string
              description: Required. 150 characters or fewer. Letters, digits and
                @/./+/-/_ only.
              pattern: ^[\w.@+-]+\z
              maxLength: 150
            password:
              type: string
              writeOnly: true
              maxLength: 128
            profile:
              type: string
              readOnly: true
              nullable: true
          required:
          - username
          - password
        current_role:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
              nullable: true
          required:
          - name
      required:
      - user
      - current_role
    Role:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    Tester:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        user:
          type: string
          writeOnly: true
        role:
          type: string
          writeOnly: true
        username:
          type: string
          readOnly: true
        user_url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        role_name:
          type: string
          readOnly: true
        role_url:
          type: string
          readOnly: true
        role_id:
          type: integer
          readOnly: true
        role_description:
          type: string
          readOnly: true
      required:
      - user
      - role
    EntityState:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        point_style_icon_transform:
          type: string
          nullable: true
          maxLength: 100
        point_style_color_transform:
          type: string
          nullable: true
          maxLength: 100
        point_style_use_marker_pin_override:
          type: boolean
          nullable: true
        point_style_marker_color_transform:
          type: string
          nullable: true
          maxLength: 100
        point_style_scale_factor_override:
          type: string
          format: decimal
          multipleOf: 0.0001
          maximum: 1000
          minimum: -1000
          nullable: true
        point_style_animation_transform:
          type: string
          nullable: true
          maxLength: 100
        point_style_render_as_symbol_override:
          type: boolean
          nullable: true
      required:
      - name
    EntityType:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        display_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        point_style:
          type: string
        entities:
          type: array
          items:
            type: string
        capabilities:
          type: array
          items:
            type: string
      required:
      - name
      - point_style
      - entities
    EntityEventRole:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        metadata_key:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
        entity_state:
          type: string
          nullable: true
        valid_event_types:
          type: array
          items:
            type: string
        valid_entity_types:
          type: array
          items:
            type: string
        valid_entity_groups:
          type: array
          items:
            type: string
      required:
      - name
    Entity:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        display_name:
          type: string
          maxLength: 100
        physical_id:
          type: string
          maxLength: 100
        entity_type:
          type: string
        description:
          type: string
          nullable: true
        trials:
          type: array
          items:
            type: string
          readOnly: true
        campaigns:
          type: array
          items:
            type: string
          readOnly: true
        groups:
          type: array
          items:
            type: string
        mods:
          type: array
          items:
            type: string
        region:
          type: array
          items:
            type: string
          readOnly: true
        latest_pose:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            point:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - Point
                coordinates:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
            elevation:
              type: number
              nullable: true
            heading:
              type: number
              nullable: true
            entity:
              type: object
              properties:
                url:
                  type: string
                  readOnly: true
                name:
                  type: string
                  maxLength: 100
                entity_type:
                  type: string
                description:
                  type: string
                  nullable: true
              required:
              - name
              - entity_type
            pose_source:
              type: object
              properties:
                url:
                  type: string
                  readOnly: true
                id:
                  type: integer
                  readOnly: true
                name:
                  type: string
                  maxLength: 100
                description:
                  type: string
              required:
              - name
            events:
              type: array
              items:
                type: string
              readOnly: true
            timestamp:
              type: string
              format: date-time
            trial:
              type: integer
              nullable: true
            speed:
              type: number
              nullable: true
            velocity:
              type: array
              items:
                type: number
          required:
          - entity
          - pose_source
          nullable: true
          readOnly: true
        module_type:
          type: string
          readOnly: true
        point_style:
          type: object
          properties:
            icon:
              type: string
              nullable: true
              maxLength: 200
            render_as_symbol:
              type: boolean
              nullable: true
            color:
              type: string
              nullable: true
              maxLength: 100
            use_marker_pin:
              type: boolean
            marker_color:
              type: string
              nullable: true
              maxLength: 100
            scale_factor:
              type: string
              format: decimal
              multipleOf: 0.0001
              maximum: 1000
              minimum: -1000
              nullable: true
            animation:
              type: string
              nullable: true
              maxLength: 100
          readOnly: true
      required:
      - name
      - entity_type
    EntityGroup:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        basemap_element:
          type: boolean
        related_entities:
          type: array
          items:
            type: string
      required:
      - name
      - related_entities
    PointStyle:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          maxLength: 200
        render_as_symbol:
          type: boolean
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 100
        use_marker_pin:
          type: boolean
        marker_color:
          type: string
          nullable: true
          maxLength: 100
        scale_factor:
          type: string
          format: decimal
          multipleOf: 0.0001
          maximum: 1000
          minimum: -1000
          nullable: true
        animation:
          type: string
          nullable: true
          maxLength: 100
        entity_types_styled:
          type: array
          items:
            type: string
          readOnly: true
        event_types_styled:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - name
    Location:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
          nullable: true
      required:
      - name
    Campaign:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
          nullable: true
        entities:
          type: array
          items:
            type: object
          readOnly: true
        scenarios:
          type: array
          items:
            type: object
          readOnly: true
        trial_id_major_name:
          type: string
          maxLength: 100
        trial_id_minor_name:
          type: string
          maxLength: 100
        trial_id_micro_name:
          type: string
          maxLength: 100
        trials:
          type: array
          items:
            type: string
          readOnly: true
        trial_names:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - name
      - start_datetime
    Trial:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        id_major:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        id_minor:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        id_micro:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        campaign:
          type: string
          nullable: true
        scenario:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
            variant:
              type: string
              nullable: true
              maxLength: 100
            test_method:
              type: string
            location:
              type: string
            has_segments:
              type: boolean
              readOnly: true
            potential_segments:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                    readOnly: true
                  id:
                    type: integer
                    readOnly: true
                  tag:
                    type: integer
                    maximum: 2147483647
                    minimum: 0
                  name:
                    type: string
                    maxLength: 100
                  description:
                    type: string
                  scenarios:
                    type: array
                    items:
                      type: string
                required:
                - tag
                - name
                - scenarios
              readOnly: true
            entity_groups:
              type: array
              items:
                type: string
            time_limit:
              type: string
              nullable: true
            scripts:
              type: array
              items:
                type: string
          required:
          - name
          - test_method
          - location
        testers:
          type: array
          items:
            type: string
        entities:
          type: array
          items:
            type: string
        test_condition:
          type: string
          nullable: true
        bagfile:
          type: string
          maxLength: 100
        system_configuration:
          type: string
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
          nullable: true
        note:
          type: string
        current:
          type: boolean
        reported:
          type: boolean
        clock_config:
          type: string
          nullable: true
        performers:
          type: array
          items:
            type: string
          readOnly: true
        script_run_counts:
          type: array
          items:
            type: object
          readOnly: true
      required:
      - id_major
      - id_minor
      - id_micro
      - campaign
      - scenario
      - testers
      - system_configuration
      - start_datetime
    Weather:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        current:
          type: boolean
      required:
      - name
    TestCondition:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        weather:
          type: string
          nullable: true
        trials:
          type: array
          items:
            type: string
          readOnly: true
    Performer:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    TestMethod:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        version_major:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        version_minor:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        version_micro:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        has_segments:
          type: boolean
        variant:
          type: string
          nullable: true
          maxLength: 100
        trials:
          type: array
          items:
            type: object
          readOnly: true
        campaigns:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - name
      - version_major
      - version_minor
      - version_micro
    Scenario:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        variant:
          type: string
          nullable: true
          maxLength: 100
        test_method:
          type: string
        location:
          type: string
        has_segments:
          type: boolean
          readOnly: true
        potential_segments:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              id:
                type: integer
                readOnly: true
              tag:
                type: integer
                maximum: 2147483647
                minimum: 0
              name:
                type: string
                maxLength: 100
              description:
                type: string
              scenarios:
                type: array
                items:
                  type: string
            required:
            - tag
            - name
            - scenarios
          readOnly: true
        entity_groups:
          type: array
          items:
            type: string
        time_limit:
          type: string
          nullable: true
        scripts:
          type: array
          items:
            type: string
      required:
      - name
      - test_method
      - location
    CapabilityUnderTest:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        performer:
          type: string
      required:
      - name
      - performer
    SystemConfiguration:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        capabilities_under_test:
          type: array
          items:
            type: string
      required:
      - name
      - capabilities_under_test
    PoseSource:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
      required:
      - name
    Pose:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        elevation:
          type: number
          nullable: true
        heading:
          type: number
          nullable: true
        entity:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
            entity_type:
              type: string
            description:
              type: string
              nullable: true
          required:
          - name
          - entity_type
        pose_source:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
          required:
          - name
        events:
          type: array
          items:
            type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        trial:
          type: integer
          nullable: true
        speed:
          type: number
          nullable: true
        velocity:
          type: array
          items:
            type: number
      required:
      - entity
      - pose_source
    QuerySetSpecification:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        model_name:
          type: string
          maxLength: 100
        methods:
          type: string
          maxLength: 255
      required:
      - name
      - model_name
    QuerySetMethod:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        method_name:
          type: string
          maxLength: 100
        parameters:
          type: string
          maxLength: 255
      required:
      - name
      - method_name
    ExtractionField:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        label:
          type: string
          maxLength: 255
        field_name:
          type: string
          maxLength: 255
      required:
      - name
      - label
    ExtractionSpecification:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        queryset:
          type: string
        extraction_fields:
          type: array
          items:
            type: string
      required:
      - name
      - queryset
      - extraction_fields
    IteratedExtractionSpecification:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        iterator:
          type: string
        prefix:
          type: string
          nullable: true
          maxLength: 100
        extraction_spec:
          type: string
      required:
      - name
    DataManipulator:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        method_name:
          type: string
          maxLength: 100
        module:
          type: string
          maxLength: 100
        parameters:
          type: string
          maxLength: 255
        dataset:
          type: string
          maxLength: 255
      required:
      - name
      - method_name
      - module
    IteratedDataManipulator:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        iterator:
          type: string
        prefix:
          type: string
          nullable: true
          maxLength: 100
        data_manipulator:
          type: string
      required:
      - name
    Iterator:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        extraction_spec:
          type: string
        unique_field:
          type: string
      required:
      - name
      - extraction_spec
      - unique_field
    FigureFamily:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        method_name:
          type: string
          maxLength: 100
        module:
          type: string
          maxLength: 100
      required:
      - name
      - method_name
      - module
    FigureType:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        data_manipulator:
          type: string
        figure_family:
          type: string
        parameters:
          type: string
          maxLength: 255
        iterator:
          type: string
          nullable: true
        prefix:
          type: string
          nullable: true
          maxLength: 100
      required:
      - name
      - data_manipulator
      - figure_family
    Report:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        template:
          type: string
          format: binary
        rendered_template:
          type: string
          format: binary
          readOnly: true
        online_report:
          type: string
          format: binary
        report_archive:
          type: string
          format: binary
        modified_datetime:
          type: string
          format: date-time
          readOnly: true
        iterators:
          type: array
          items:
            type: string
        figure_types:
          type: array
          items:
            type: string
        iterated_extraction_specs:
          type: array
          items:
            type: string
        iterated_data_manipulators:
          type: array
          items:
            type: string
        format:
          enum:
          - pdf
          - html
          type: string
        status:
          type: string
          readOnly: true
      required:
      - name
      - template
      - online_report
      - report_archive
    Mod:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        display_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        capabilities:
          type: array
          items:
            type: string
      required:
      - name
      - capabilities
    Capability:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        display_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    EventLevel:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        key:
          type: string
          maxLength: 100
        visibility:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - name
      - key
      - visibility
    EventType:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        event_level:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
            key:
              type: string
              maxLength: 100
            visibility:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          required:
          - name
          - key
          - visibility
        priority_metadata:
          type: array
          items:
            type: string
        metadata_style_fields:
          type: array
          items:
            type: string
          nullable: true
        point_style:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
              nullable: true
            icon:
              type: string
              nullable: true
              maxLength: 200
            render_as_symbol:
              type: boolean
              nullable: true
            color:
              type: string
              nullable: true
              maxLength: 100
            use_marker_pin:
              type: boolean
            marker_color:
              type: string
              nullable: true
              maxLength: 100
            scale_factor:
              type: string
              format: decimal
              multipleOf: 0.0001
              maximum: 1000
              minimum: -1000
              nullable: true
            animation:
              type: string
              nullable: true
              maxLength: 100
            entity_types_styled:
              type: array
              items:
                type: string
              readOnly: true
            event_types_styled:
              type: array
              items:
                type: string
              readOnly: true
          required:
          - name
        has_duration:
          type: boolean
        exclusive_with:
          type: array
          items:
            type: string
        resets_with:
          type: array
          items:
            type: string
        ends_segment:
          type: boolean
        is_manual:
          type: boolean
      required:
      - name
      - event_level
      - point_style
    Event:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        trial:
          type: string
        modified_datetime:
          type: string
          format: date-time
          readOnly: true
        submitted_datetime:
          type: string
          format: date-time
          readOnly: true
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
          nullable: true
        start_pose:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            point:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - Point
                coordinates:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
            elevation:
              type: number
              nullable: true
            heading:
              type: number
              nullable: true
            entity:
              type: object
              properties:
                url:
                  type: string
                  readOnly: true
                name:
                  type: string
                  maxLength: 100
                entity_type:
                  type: string
                description:
                  type: string
                  nullable: true
              required:
              - name
              - entity_type
            pose_source:
              type: object
              properties:
                url:
                  type: string
                  readOnly: true
                id:
                  type: integer
                  readOnly: true
                name:
                  type: string
                  maxLength: 100
                description:
                  type: string
              required:
              - name
            events:
              type: array
              items:
                type: string
              readOnly: true
            timestamp:
              type: string
              format: date-time
            trial:
              type: integer
              nullable: true
            speed:
              type: number
              nullable: true
            velocity:
              type: array
              items:
                type: number
          required:
          - entity
          - pose_source
          nullable: true
        event_type:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
            event_level:
              type: object
              properties:
                url:
                  type: string
                  readOnly: true
                id:
                  type: integer
                  readOnly: true
                name:
                  type: string
                  maxLength: 100
                description:
                  type: string
                key:
                  type: string
                  maxLength: 100
                visibility:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
              required:
              - name
              - key
              - visibility
            priority_metadata:
              type: array
              items:
                type: string
            metadata_style_fields:
              type: array
              items:
                type: string
              nullable: true
            point_style:
              type: object
              properties:
                url:
                  type: string
                  readOnly: true
                name:
                  type: string
                  maxLength: 100
                description:
                  type: string
                  nullable: true
                icon:
                  type: string
                  nullable: true
                  maxLength: 200
                render_as_symbol:
                  type: boolean
                  nullable: true
                color:
                  type: string
                  nullable: true
                  maxLength: 100
                use_marker_pin:
                  type: boolean
                marker_color:
                  type: string
                  nullable: true
                  maxLength: 100
                scale_factor:
                  type: string
                  format: decimal
                  multipleOf: 0.0001
                  maximum: 1000
                  minimum: -1000
                  nullable: true
                animation:
                  type: string
                  nullable: true
                  maxLength: 100
                entity_types_styled:
                  type: array
                  items:
                    type: string
                  readOnly: true
                event_types_styled:
                  type: array
                  items:
                    type: string
                  readOnly: true
              required:
              - name
            has_duration:
              type: boolean
            exclusive_with:
              type: array
              items:
                type: string
            resets_with:
              type: array
              items:
                type: string
            ends_segment:
              type: boolean
            is_manual:
              type: boolean
          required:
          - name
          - event_level
          - point_style
        weather:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
            current:
              type: boolean
          required:
          - name
        trigger:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            key:
              type: string
              maxLength: 100
            description:
              type: string
            is_active:
              type: boolean
            is_manual:
              type: boolean
            creates_event:
              type: boolean
            condition:
              type: string
              nullable: true
            condition_variables:
              type: array
              items:
                type: string
            event_type:
              type: string
              nullable: true
            requested_dataset:
              type: array
              items:
                type: string
            trigger_transport:
              type: string
              maxLength: 10
            trigger_responses:
              type: array
              items:
                type: string
            cond_vars:
              type: array
              items:
                type: string
              readOnly: true
            converted_cond_vars:
              type: string
              readOnly: true
            req_data:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                    readOnly: true
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  description:
                    type: string
                  destination_url:
                    type: string
                  payload:
                    type: object
                required:
                - name
              readOnly: true
            trig_resp:
              type: string
              readOnly: true
          required:
          - name
          - key
          nullable: true
        segment:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            tag:
              type: integer
              maximum: 2147483647
              minimum: 0
            name:
              type: string
              maxLength: 100
            description:
              type: string
            scenarios:
              type: array
              items:
                type: string
          required:
          - tag
          - name
          - scenarios
          nullable: true
        point_style:
          type: object
          properties:
            icon:
              type: string
              nullable: true
              maxLength: 200
            render_as_symbol:
              type: boolean
              nullable: true
            color:
              type: string
              nullable: true
              maxLength: 100
            use_marker_pin:
              type: boolean
            marker_color:
              type: string
              nullable: true
              maxLength: 100
            scale_factor:
              type: string
              format: decimal
              multipleOf: 0.0001
              maximum: 1000
              minimum: -1000
              nullable: true
            animation:
              type: string
              nullable: true
              maxLength: 100
          readOnly: true
        notes:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              id:
                type: integer
                readOnly: true
              tester:
                type: object
                properties:
                  url:
                    type: string
                    readOnly: true
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    readOnly: true
                  user:
                    type: string
                    writeOnly: true
                  role:
                    type: string
                    writeOnly: true
                  username:
                    type: string
                    readOnly: true
                  user_url:
                    type: string
                    readOnly: true
                  user_id:
                    type: string
                    readOnly: true
                  role_name:
                    type: string
                    readOnly: true
                  role_url:
                    type: string
                    readOnly: true
                  role_id:
                    type: string
                    readOnly: true
                  role_description:
                    type: string
                    readOnly: true
                required:
                - user
                - role
              note:
                type: string
              event:
                type: string
            required:
            - tester
            - note
            - event
          readOnly: true
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              id:
                type: integer
                readOnly: true
              image:
                type: string
                format: binary
                writeOnly: true
              image_url:
                type: string
                readOnly: true
              thumb_url:
                type: string
                readOnly: true
              image_type:
                type: object
                properties:
                  url:
                    type: string
                    readOnly: true
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  description:
                    type: string
                  topic:
                    type: string
                    maxLength: 100
                required:
                - name
              event:
                type: string
              timestamp:
                type: string
                format: date-time
            required:
            - image
            - image_type
            - event
            - timestamp
          readOnly: true
        related_entities:
          type: object
          readOnly: true
        unfound_entities:
          type: array
          items:
            type: string
          readOnly: true
        invalid_entities:
          type: array
          items:
            type: string
          readOnly: true
        metadata:
          type: object
      required:
      - trial
      - start_pose
      - event_type
      - weather
      - trigger
      - segment
    Segment:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        tag:
          type: integer
          maximum: 2147483647
          minimum: 0
        name:
          type: string
          maxLength: 100
        description:
          type: string
        scenarios:
          type: array
          items:
            type: string
      required:
      - tag
      - name
      - scenarios
    Note:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        tester:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              readOnly: true
            user:
              type: string
              writeOnly: true
            role:
              type: string
              writeOnly: true
            username:
              type: string
              readOnly: true
            user_url:
              type: string
              readOnly: true
            user_id:
              type: integer
              readOnly: true
            role_name:
              type: string
              readOnly: true
            role_url:
              type: string
              readOnly: true
            role_id:
              type: integer
              readOnly: true
            role_description:
              type: string
              readOnly: true
          required:
          - user
          - role
        note:
          type: string
        event:
          type: string
      required:
      - tester
      - note
      - event
    ImageType:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        topic:
          type: string
          maxLength: 100
      required:
      - name
    Image:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: binary
          writeOnly: true
        image_url:
          type: string
          readOnly: true
        thumb_url:
          type: string
          readOnly: true
        image_type:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            description:
              type: string
            topic:
              type: string
              maxLength: 100
          required:
          - name
        event:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
      - image
      - image_type
      - event
      - timestamp
    ServerType:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        description:
          type: string
        key:
          type: string
          maxLength: 100
      required:
      - key
    ServerParam:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        param:
          type: string
          maxLength: 100
        value:
          type: string
          maxLength: 1000
      required:
      - name
      - param
      - value
    Server:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        server_type:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            id:
              type: integer
              readOnly: true
            description:
              type: string
            key:
              type: string
              maxLength: 100
          required:
          - key
        active:
          type: boolean
        base_url:
          type: string
          maxLength: 1000
        server_params:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 100
              description:
                type: string
              param:
                type: string
                maxLength: 100
              value:
                type: string
                maxLength: 1000
            required:
            - name
            - param
            - value
          readOnly: true
      required:
      - name
      - server_type
      - base_url
    KeyValuePair:
      type: object
      properties:
        key:
          type: string
          maxLength: 255
        value:
          type: string
          maxLength: 255
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
      required:
      - key
      - value
    TriggerResponse:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        method:
          type: string
          maxLength: 100
        module:
          type: string
          maxLength: 100
        parameters:
          type: array
          items:
            type: string
      required:
      - name
      - method
      - module
    OrderedTriggerResponse:
      type: object
      properties:
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        trigger_response:
          type: string
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
      required:
      - order
      - trigger_response
    Trigger:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        key:
          type: string
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
        is_manual:
          type: boolean
        creates_event:
          type: boolean
        condition:
          type: string
          nullable: true
        condition_variables:
          type: array
          items:
            type: string
        event_type:
          type: string
          nullable: true
        requested_dataset:
          type: array
          items:
            type: string
        trigger_transport:
          type: string
          maxLength: 10
        trigger_responses:
          type: array
          items:
            type: string
        cond_vars:
          type: array
          items:
            type: string
          readOnly: true
        converted_cond_vars:
          type: array
          items:
            type: string
          readOnly: true
        req_data:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 100
              description:
                type: string
              destination_url:
                type: string
              payload:
                type: object
            required:
            - name
          readOnly: true
        trig_resp:
          type: array
          items:
            type: object
          readOnly: true
      required:
      - name
      - key
    ConditionVariable:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        variable:
          type: string
      required:
      - name
    RequestedData:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        destination_url:
          type: string
        payload:
          type: object
      required:
      - name
    Region:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        region_type:
          type: string
        entities:
          type: object
          readOnly: true
        geom:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - 0.0
                - 0.0
              - - 0.0
                - 50.0
              - - 50.0
                - 50.0
              - - 50.0
                - 0.0
              - - 0.0
                - 0.0
        key_point:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
          nullable: true
        z_layer:
          type: number
        scenarios:
          type: array
          items:
            type: string
      required:
      - name
      - region_type
      - geom
      - z_layer
    RegionType:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    ClockConfig:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        timezone:
          type: string
          maxLength: 50
        phases:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              message:
                type: string
                maxLength: 100
              message_only:
                type: boolean
              countdown:
                type: boolean
              duration_seconds:
                type: integer
                maximum: 2147483647
                nullable: true
                minimum: 0
              starts_with_datetime:
                type: string
                format: date-time
                nullable: true
              starts_with_trial_start:
                type: boolean
              starts_with_trial_end:
                type: boolean
              ends_with_datetime:
                type: string
                format: date-time
                nullable: true
              ends_with_trial_start:
                type: boolean
              ends_with_trial_end:
                type: boolean
              starts_with_event_type:
                type: string
                nullable: true
              ends_with_event_type:
                type: string
                nullable: true
            required:
            - message
          readOnly: true
      required:
      - name
    ClockPhase:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        message:
          type: string
          maxLength: 100
        message_only:
          type: boolean
        countdown:
          type: boolean
        duration_seconds:
          type: integer
          maximum: 2147483647
          nullable: true
          minimum: 0
        starts_with_datetime:
          type: string
          format: date-time
          nullable: true
        starts_with_trial_start:
          type: boolean
        starts_with_trial_end:
          type: boolean
        ends_with_datetime:
          type: string
          format: date-time
          nullable: true
        ends_with_trial_start:
          type: boolean
        ends_with_trial_end:
          type: boolean
        starts_with_event_type:
          type: string
          nullable: true
        ends_with_event_type:
          type: string
          nullable: true
      required:
      - message
    Script:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        initiating_event_types:
          type: array
          items:
            type: string
        conditions:
          type: array
          items:
            type: string
        run_limit:
          type: integer
          maximum: 2147483647
          nullable: true
          minimum: 0
        auto_repeat_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        conditions_pass_if_any:
          type: boolean
        cancelling_event_type:
          type: string
          nullable: true
        scripted_event_head:
          type: string
          nullable: true
      required:
      - name
      - initiating_event_types
    ScriptedEvent:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        conditions:
          type: array
          items:
            type: string
        conditions_pass_if_any:
          type: boolean
        delay_seconds:
          type: integer
          maximum: 2147483647
          nullable: true
          minimum: 0
        event_type:
          type: string
        add_event_metadata:
          type: object
        copy_trigger_metadata:
          type: boolean
        next_scripted_event:
          type: string
          nullable: true
      required:
      - name
      - event_type
    ScriptCondition:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
        trial_has_event:
          type: string
          nullable: true
        trial_missing_event:
          type: string
          nullable: true
        event_metadata_contains:
          type: string
          nullable: true
          maxLength: 100
        event_metadata_excludes:
          type: string
          nullable: true
          maxLength: 100
        trigger_metadata_contains:
          type: string
          nullable: true
          maxLength: 100
        trigger_metadata_excludes:
          type: string
          nullable: true
          maxLength: 100
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
